Terminals unused in grammar

   BRANCHTARGETS_DIRECTIVE
   BYTE_DIRECTIVE
   CALLPROTOTYPE_DIRECTIVE
   CALLTARGETS_DIRECTIVE
   MAXNNREG_DIRECTIVE
   REQNTID_DIRECTIVE
   SECTION_DIRECTIVE
   STRUCT_DIRECTIVE
   UNION_DIRECTIVE
   PERIOD


State 297 conflicts: 1 reduce/reduce


Grammar

    0 $accept: input $end

    1 input: %empty
    2      | input directive_statement
    3      | input function_defn
    4      | input function_decl

    5 $@1: %empty

    6 function_defn: function_decl $@1 statement_block

    7 $@2: %empty

    8 $@3: %empty

    9 function_defn: function_decl $@2 block_spec_list $@3 statement_block

   10 block_spec: MAXNTID_DIRECTIVE INT_OPERAND COMMA INT_OPERAND COMMA INT_OPERAND
   11           | MINNCTAPERSM_DIRECTIVE INT_OPERAND
   12           | MAXNCTAPERSM_DIRECTIVE INT_OPERAND

   13 block_spec_list: block_spec
   14                | block_spec_list block_spec

   15 $@4: %empty

   16 $@5: %empty

   17 function_decl: function_decl_header LEFT_PAREN $@4 param_entry RIGHT_PAREN $@5 function_ident_param

   18 $@6: %empty

   19 function_decl: function_decl_header $@6 function_ident_param
   20              | function_decl_header

   21 $@7: %empty

   22 $@8: %empty

   23 function_ident_param: IDENTIFIER $@7 LEFT_PAREN $@8 param_list RIGHT_PAREN
   24                     | IDENTIFIER

   25 function_decl_header: ENTRY_DIRECTIVE
   26                     | FUNC_DIRECTIVE
   27                     | VISIBLE_DIRECTIVE FUNC_DIRECTIVE
   28                     | EXTERN_DIRECTIVE FUNC_DIRECTIVE

   29 param_list: %empty
   30           | param_entry

   31 $@9: %empty

   32 param_list: param_list COMMA $@9 param_entry

   33 $@10: %empty

   34 param_entry: PARAM_DIRECTIVE $@10 variable_spec ptr_spec identifier_spec

   35 $@11: %empty

   36 param_entry: REG_DIRECTIVE $@11 variable_spec identifier_spec

   37 ptr_spec: %empty
   38         | PTR_DIRECTIVE ptr_space_spec ptr_align_spec
   39         | PTR_DIRECTIVE ptr_align_spec

   40 ptr_space_spec: GLOBAL_DIRECTIVE
   41               | LOCAL_DIRECTIVE
   42               | SHARED_DIRECTIVE

   43 ptr_align_spec: ALIGN_DIRECTIVE INT_OPERAND

   44 statement_block: LEFT_BRACE statement_list RIGHT_BRACE

   45 statement_list: directive_statement
   46               | instruction_statement
   47               | statement_list directive_statement
   48               | statement_list instruction_statement
   49               | statement_list statement_block
   50               | statement_block

   51 directive_statement: variable_declaration SEMI_COLON
   52                    | VERSION_DIRECTIVE DOUBLE_OPERAND
   53                    | VERSION_DIRECTIVE DOUBLE_OPERAND PLUS
   54                    | ADDRESS_SIZE_DIRECTIVE INT_OPERAND
   55                    | TARGET_DIRECTIVE IDENTIFIER COMMA IDENTIFIER
   56                    | TARGET_DIRECTIVE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER
   57                    | TARGET_DIRECTIVE IDENTIFIER
   58                    | FILE_DIRECTIVE INT_OPERAND STRING
   59                    | LOC_DIRECTIVE INT_OPERAND INT_OPERAND INT_OPERAND
   60                    | PRAGMA_DIRECTIVE STRING SEMI_COLON
   61                    | function_decl SEMI_COLON

   62 variable_declaration: variable_spec identifier_list
   63                     | variable_spec identifier_spec EQUALS initializer_list
   64                     | variable_spec identifier_spec EQUALS literal_operand
   65                     | CONSTPTR_DIRECTIVE IDENTIFIER COMMA IDENTIFIER COMMA INT_OPERAND

   66 variable_spec: var_spec_list

   67 identifier_list: identifier_spec
   68                | identifier_list COMMA identifier_spec

   69 identifier_spec: IDENTIFIER
   70                | IDENTIFIER LEFT_ANGLE_BRACKET INT_OPERAND RIGHT_ANGLE_BRACKET
   71                | IDENTIFIER LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
   72                | IDENTIFIER LEFT_SQUARE_BRACKET INT_OPERAND RIGHT_SQUARE_BRACKET

   73 var_spec_list: var_spec
   74              | var_spec_list var_spec

   75 var_spec: space_spec
   76         | type_spec
   77         | align_spec
   78         | EXTERN_DIRECTIVE

   79 align_spec: ALIGN_DIRECTIVE INT_OPERAND

   80 space_spec: REG_DIRECTIVE
   81           | SREG_DIRECTIVE
   82           | addressable_spec

   83 addressable_spec: CONST_DIRECTIVE
   84                 | GLOBAL_DIRECTIVE
   85                 | LOCAL_DIRECTIVE
   86                 | PARAM_DIRECTIVE
   87                 | SHARED_DIRECTIVE
   88                 | SURF_DIRECTIVE
   89                 | TEX_DIRECTIVE

   90 type_spec: scalar_type
   91          | vector_spec scalar_type

   92 vector_spec: V2_TYPE
   93            | V3_TYPE
   94            | V4_TYPE

   95 scalar_type: S8_TYPE
   96            | S16_TYPE
   97            | S32_TYPE
   98            | S64_TYPE
   99            | U8_TYPE
  100            | U16_TYPE
  101            | U32_TYPE
  102            | U64_TYPE
  103            | F16_TYPE
  104            | F32_TYPE
  105            | F64_TYPE
  106            | FF64_TYPE
  107            | B8_TYPE
  108            | B16_TYPE
  109            | B32_TYPE
  110            | B64_TYPE
  111            | BB64_TYPE
  112            | BB128_TYPE
  113            | PRED_TYPE
  114            | TEXREF_TYPE
  115            | SAMPLERREF_TYPE
  116            | SURFREF_TYPE

  117 initializer_list: LEFT_BRACE literal_list RIGHT_BRACE
  118                 | LEFT_BRACE initializer_list RIGHT_BRACE

  119 literal_list: literal_operand
  120             | literal_list COMMA literal_operand

  121 instruction_statement: instruction SEMI_COLON
  122                      | IDENTIFIER COLON
  123                      | pred_spec instruction SEMI_COLON

  124 $@12: %empty

  125 instruction: opcode_spec LEFT_PAREN operand RIGHT_PAREN $@12 COMMA operand COMMA LEFT_PAREN operand_list RIGHT_PAREN
  126            | opcode_spec operand COMMA LEFT_PAREN operand_list RIGHT_PAREN
  127            | opcode_spec operand COMMA LEFT_PAREN RIGHT_PAREN
  128            | opcode_spec operand_list
  129            | opcode_spec

  130 $@13: %empty

  131 opcode_spec: OPCODE $@13 option_list
  132            | OPCODE

  133 pred_spec: PRED IDENTIFIER
  134          | PRED EXCLAMATION IDENTIFIER
  135          | PRED IDENTIFIER LT_OPTION
  136          | PRED IDENTIFIER EQ_OPTION
  137          | PRED IDENTIFIER LE_OPTION
  138          | PRED IDENTIFIER NE_OPTION
  139          | PRED IDENTIFIER GE_OPTION
  140          | PRED IDENTIFIER EQU_OPTION
  141          | PRED IDENTIFIER GTU_OPTION
  142          | PRED IDENTIFIER NEU_OPTION
  143          | PRED IDENTIFIER CF_OPTION
  144          | PRED IDENTIFIER SF_OPTION
  145          | PRED IDENTIFIER NSF_OPTION

  146 option_list: option
  147            | option option_list

  148 option: type_spec
  149       | compare_spec
  150       | addressable_spec
  151       | rounding_mode
  152       | SYNC_OPTION
  153       | ARRIVE_OPTION
  154       | RED_OPTION
  155       | POPC_REDUCTION
  156       | AND_REDUCTION
  157       | OR_REDUCTION
  158       | UNI_OPTION
  159       | WIDE_OPTION
  160       | ANY_OPTION
  161       | ALL_OPTION
  162       | BALLOT_OPTION
  163       | GLOBAL_OPTION
  164       | CTA_OPTION
  165       | SYS_OPTION
  166       | GEOM_MODIFIER_1D
  167       | GEOM_MODIFIER_2D
  168       | GEOM_MODIFIER_3D
  169       | SAT_OPTION
  170       | FTZ_OPTION
  171       | NEG_OPTION
  172       | APPROX_OPTION
  173       | FULL_OPTION
  174       | EXIT_OPTION
  175       | ABS_OPTION
  176       | atomic_operation_spec
  177       | TO_OPTION
  178       | HALF_OPTION
  179       | CA_OPTION
  180       | CG_OPTION
  181       | CS_OPTION
  182       | LU_OPTION
  183       | CV_OPTION
  184       | WB_OPTION
  185       | WT_OPTION

  186 atomic_operation_spec: ATOMIC_AND
  187                      | ATOMIC_OR
  188                      | ATOMIC_XOR
  189                      | ATOMIC_CAS
  190                      | ATOMIC_EXCH
  191                      | ATOMIC_ADD
  192                      | ATOMIC_INC
  193                      | ATOMIC_DEC
  194                      | ATOMIC_MIN
  195                      | ATOMIC_MAX

  196 rounding_mode: floating_point_rounding_mode
  197              | integer_rounding_mode

  198 floating_point_rounding_mode: RN_OPTION
  199                             | RZ_OPTION
  200                             | RM_OPTION
  201                             | RP_OPTION

  202 integer_rounding_mode: RNI_OPTION
  203                      | RZI_OPTION
  204                      | RMI_OPTION
  205                      | RPI_OPTION

  206 compare_spec: EQ_OPTION
  207             | NE_OPTION
  208             | LT_OPTION
  209             | LE_OPTION
  210             | GT_OPTION
  211             | GE_OPTION
  212             | LO_OPTION
  213             | LS_OPTION
  214             | HI_OPTION
  215             | HS_OPTION
  216             | EQU_OPTION
  217             | NEU_OPTION
  218             | LTU_OPTION
  219             | LEU_OPTION
  220             | GTU_OPTION
  221             | GEU_OPTION
  222             | NUM_OPTION
  223             | NAN_OPTION

  224 operand_list: operand
  225             | operand COMMA operand_list

  226 operand: IDENTIFIER
  227        | EXCLAMATION IDENTIFIER
  228        | MINUS IDENTIFIER
  229        | memory_operand
  230        | literal_operand
  231        | builtin_operand
  232        | vector_operand
  233        | MINUS vector_operand
  234        | tex_operand
  235        | IDENTIFIER PLUS INT_OPERAND
  236        | IDENTIFIER LO_OPTION
  237        | MINUS IDENTIFIER LO_OPTION
  238        | IDENTIFIER HI_OPTION
  239        | MINUS IDENTIFIER HI_OPTION
  240        | IDENTIFIER PIPE IDENTIFIER
  241        | IDENTIFIER PIPE IDENTIFIER LO_OPTION
  242        | IDENTIFIER PIPE IDENTIFIER HI_OPTION
  243        | IDENTIFIER BACKSLASH IDENTIFIER
  244        | IDENTIFIER BACKSLASH IDENTIFIER LO_OPTION
  245        | IDENTIFIER BACKSLASH IDENTIFIER HI_OPTION

  246 vector_operand: LEFT_BRACE IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  247               | LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  248               | LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  249               | LEFT_BRACE IDENTIFIER RIGHT_BRACE

  250 $@14: %empty

  251 tex_operand: LEFT_SQUARE_BRACKET IDENTIFIER COMMA $@14 vector_operand RIGHT_SQUARE_BRACKET

  252 builtin_operand: SPECIAL_REGISTER DIMENSION_MODIFIER
  253                | SPECIAL_REGISTER

  254 memory_operand: LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET
  255               | IDENTIFIER LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET
  256               | IDENTIFIER LEFT_SQUARE_BRACKET literal_operand RIGHT_SQUARE_BRACKET
  257               | IDENTIFIER LEFT_SQUARE_BRACKET twin_operand RIGHT_SQUARE_BRACKET
  258               | MINUS memory_operand

  259 twin_operand: IDENTIFIER PLUS IDENTIFIER
  260             | IDENTIFIER PLUS IDENTIFIER LO_OPTION
  261             | IDENTIFIER PLUS IDENTIFIER HI_OPTION
  262             | IDENTIFIER PLUS EQUALS IDENTIFIER
  263             | IDENTIFIER PLUS EQUALS IDENTIFIER LO_OPTION
  264             | IDENTIFIER PLUS EQUALS IDENTIFIER HI_OPTION
  265             | IDENTIFIER PLUS EQUALS INT_OPERAND

  266 literal_operand: INT_OPERAND
  267                | FLOAT_OPERAND
  268                | DOUBLE_OPERAND

  269 address_expression: IDENTIFIER
  270                   | IDENTIFIER LO_OPTION
  271                   | IDENTIFIER HI_OPTION
  272                   | IDENTIFIER PLUS INT_OPERAND
  273                   | INT_OPERAND


Terminals, with rules where they appear

$end (0) 0
error (256)
STRING (258) 58 60
OPCODE (259) 131 132
ALIGN_DIRECTIVE (260) 43 79
BRANCHTARGETS_DIRECTIVE (261)
BYTE_DIRECTIVE (262)
CALLPROTOTYPE_DIRECTIVE (263)
CALLTARGETS_DIRECTIVE (264)
CONST_DIRECTIVE (265) 83
CONSTPTR_DIRECTIVE (266) 65
PTR_DIRECTIVE (267) 38 39
ENTRY_DIRECTIVE (268) 25
EXTERN_DIRECTIVE (269) 28 78
FILE_DIRECTIVE (270) 58
FUNC_DIRECTIVE (271) 26 27 28
GLOBAL_DIRECTIVE (272) 40 84
LOCAL_DIRECTIVE (273) 41 85
LOC_DIRECTIVE (274) 59
MAXNCTAPERSM_DIRECTIVE (275) 12
MAXNNREG_DIRECTIVE (276)
MAXNTID_DIRECTIVE (277) 10
MINNCTAPERSM_DIRECTIVE (278) 11
PARAM_DIRECTIVE (279) 34 86
PRAGMA_DIRECTIVE (280) 60
REG_DIRECTIVE (281) 36 80
REQNTID_DIRECTIVE (282)
SECTION_DIRECTIVE (283)
SHARED_DIRECTIVE (284) 42 87
SREG_DIRECTIVE (285) 81
STRUCT_DIRECTIVE (286)
SURF_DIRECTIVE (287) 88
TARGET_DIRECTIVE (288) 55 56 57
TEX_DIRECTIVE (289) 89
UNION_DIRECTIVE (290)
VERSION_DIRECTIVE (291) 52 53
ADDRESS_SIZE_DIRECTIVE (292) 54
VISIBLE_DIRECTIVE (293) 27
IDENTIFIER (294) 23 24 55 56 57 65 69 70 71 72 122 133 134 135 136
    137 138 139 140 141 142 143 144 145 226 227 228 235 236 237 238
    239 240 241 242 243 244 245 246 247 248 249 251 255 256 257 259
    260 261 262 263 264 265 269 270 271 272
INT_OPERAND (295) 10 11 12 43 54 58 59 65 70 72 79 235 265 266 272
    273
FLOAT_OPERAND (296) 267
DOUBLE_OPERAND (297) 52 53 268
S8_TYPE (298) 95
S16_TYPE (299) 96
S32_TYPE (300) 97
S64_TYPE (301) 98
U8_TYPE (302) 99
U16_TYPE (303) 100
U32_TYPE (304) 101
U64_TYPE (305) 102
F16_TYPE (306) 103
F32_TYPE (307) 104
F64_TYPE (308) 105
FF64_TYPE (309) 106
B8_TYPE (310) 107
B16_TYPE (311) 108
B32_TYPE (312) 109
B64_TYPE (313) 110
BB64_TYPE (314) 111
BB128_TYPE (315) 112
PRED_TYPE (316) 113
TEXREF_TYPE (317) 114
SAMPLERREF_TYPE (318) 115
SURFREF_TYPE (319) 116
V2_TYPE (320) 92
V3_TYPE (321) 93
V4_TYPE (322) 94
COMMA (323) 10 32 55 56 65 68 120 125 126 127 225 246 247 248 251
PRED (324) 133 134 135 136 137 138 139 140 141 142 143 144 145
HALF_OPTION (325) 178
EQ_OPTION (326) 136 206
NE_OPTION (327) 138 207
LT_OPTION (328) 135 208
LE_OPTION (329) 137 209
GT_OPTION (330) 210
GE_OPTION (331) 139 211
LO_OPTION (332) 212 236 237 241 244 260 263 270
LS_OPTION (333) 213
HI_OPTION (334) 214 238 239 242 245 261 264 271
HS_OPTION (335) 215
EQU_OPTION (336) 140 216
NEU_OPTION (337) 142 217
LTU_OPTION (338) 218
LEU_OPTION (339) 219
GTU_OPTION (340) 141 220
GEU_OPTION (341) 221
NUM_OPTION (342) 222
NAN_OPTION (343) 223
CF_OPTION (344) 143
SF_OPTION (345) 144
NSF_OPTION (346) 145
LEFT_SQUARE_BRACKET (347) 71 72 251 254 255 256 257
RIGHT_SQUARE_BRACKET (348) 71 72 251 254 255 256 257
WIDE_OPTION (349) 159
SPECIAL_REGISTER (350) 252 253
MINUS (351) 228 233 237 239 258
PLUS (352) 53 235 259 260 261 262 263 264 265 272
COLON (353) 122
SEMI_COLON (354) 51 60 61 121 123
EXCLAMATION (355) 134 227
PIPE (356) 240 241 242
RIGHT_BRACE (357) 44 117 118 246 247 248 249
LEFT_BRACE (358) 44 117 118 246 247 248 249
EQUALS (359) 63 64 262 263 264 265
PERIOD (360)
BACKSLASH (361) 243 244 245
DIMENSION_MODIFIER (362) 252
RN_OPTION (363) 198
RZ_OPTION (364) 199
RM_OPTION (365) 200
RP_OPTION (366) 201
RNI_OPTION (367) 202
RZI_OPTION (368) 203
RMI_OPTION (369) 204
RPI_OPTION (370) 205
UNI_OPTION (371) 158
GEOM_MODIFIER_1D (372) 166
GEOM_MODIFIER_2D (373) 167
GEOM_MODIFIER_3D (374) 168
SAT_OPTION (375) 169
FTZ_OPTION (376) 170
NEG_OPTION (377) 171
SYNC_OPTION (378) 152
RED_OPTION (379) 154
POPC_REDUCTION (380) 155
AND_REDUCTION (381) 156
OR_REDUCTION (382) 157
ARRIVE_OPTION (383) 153
ATOMIC_AND (384) 186
ATOMIC_OR (385) 187
ATOMIC_XOR (386) 188
ATOMIC_CAS (387) 189
ATOMIC_EXCH (388) 190
ATOMIC_ADD (389) 191
ATOMIC_INC (390) 192
ATOMIC_DEC (391) 193
ATOMIC_MIN (392) 194
ATOMIC_MAX (393) 195
LEFT_ANGLE_BRACKET (394) 70
RIGHT_ANGLE_BRACKET (395) 70
LEFT_PAREN (396) 17 23 125 126 127
RIGHT_PAREN (397) 17 23 125 126 127
APPROX_OPTION (398) 172
FULL_OPTION (399) 173
ANY_OPTION (400) 160
ALL_OPTION (401) 161
BALLOT_OPTION (402) 162
GLOBAL_OPTION (403) 163
CTA_OPTION (404) 164
SYS_OPTION (405) 165
EXIT_OPTION (406) 174
ABS_OPTION (407) 175
TO_OPTION (408) 177
CA_OPTION (409) 179
CG_OPTION (410) 180
CS_OPTION (411) 181
LU_OPTION (412) 182
CV_OPTION (413) 183
WB_OPTION (414) 184
WT_OPTION (415) 185


Nonterminals, with rules where they appear

$accept (161)
    on left: 0
input (162)
    on left: 1 2 3 4, on right: 0 2 3 4
function_defn (163)
    on left: 6 9, on right: 3
$@1 (164)
    on left: 5, on right: 6
$@2 (165)
    on left: 7, on right: 9
$@3 (166)
    on left: 8, on right: 9
block_spec (167)
    on left: 10 11 12, on right: 13 14
block_spec_list (168)
    on left: 13 14, on right: 9 14
function_decl (169)
    on left: 17 19 20, on right: 4 6 9 61
$@4 (170)
    on left: 15, on right: 17
$@5 (171)
    on left: 16, on right: 17
$@6 (172)
    on left: 18, on right: 19
function_ident_param (173)
    on left: 23 24, on right: 17 19
$@7 (174)
    on left: 21, on right: 23
$@8 (175)
    on left: 22, on right: 23
function_decl_header (176)
    on left: 25 26 27 28, on right: 17 19 20
param_list (177)
    on left: 29 30 32, on right: 23 32
$@9 (178)
    on left: 31, on right: 32
param_entry (179)
    on left: 34 36, on right: 17 30 32
$@10 (180)
    on left: 33, on right: 34
$@11 (181)
    on left: 35, on right: 36
ptr_spec (182)
    on left: 37 38 39, on right: 34
ptr_space_spec (183)
    on left: 40 41 42, on right: 38
ptr_align_spec (184)
    on left: 43, on right: 38 39
statement_block (185)
    on left: 44, on right: 6 9 49 50
statement_list (186)
    on left: 45 46 47 48 49 50, on right: 44 47 48 49
directive_statement (187)
    on left: 51 52 53 54 55 56 57 58 59 60 61, on right: 2 45 47
variable_declaration (188)
    on left: 62 63 64 65, on right: 51
variable_spec (189)
    on left: 66, on right: 34 36 62 63 64
identifier_list (190)
    on left: 67 68, on right: 62 68
identifier_spec (191)
    on left: 69 70 71 72, on right: 34 36 63 64 67 68
var_spec_list (192)
    on left: 73 74, on right: 66 74
var_spec (193)
    on left: 75 76 77 78, on right: 73 74
align_spec (194)
    on left: 79, on right: 77
space_spec (195)
    on left: 80 81 82, on right: 75
addressable_spec (196)
    on left: 83 84 85 86 87 88 89, on right: 82 150
type_spec (197)
    on left: 90 91, on right: 76 148
vector_spec (198)
    on left: 92 93 94, on right: 91
scalar_type (199)
    on left: 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109
    110 111 112 113 114 115 116, on right: 90 91
initializer_list (200)
    on left: 117 118, on right: 63 118
literal_list (201)
    on left: 119 120, on right: 117 120
instruction_statement (202)
    on left: 121 122 123, on right: 46 48
instruction (203)
    on left: 125 126 127 128 129, on right: 121 123
$@12 (204)
    on left: 124, on right: 125
opcode_spec (205)
    on left: 131 132, on right: 125 126 127 128 129
$@13 (206)
    on left: 130, on right: 131
pred_spec (207)
    on left: 133 134 135 136 137 138 139 140 141 142 143 144 145, on right:
    123
option_list (208)
    on left: 146 147, on right: 131 147
option (209)
    on left: 148 149 150 151 152 153 154 155 156 157 158 159 160 161
    162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177
    178 179 180 181 182 183 184 185, on right: 146 147
atomic_operation_spec (210)
    on left: 186 187 188 189 190 191 192 193 194 195, on right: 176
rounding_mode (211)
    on left: 196 197, on right: 151
floating_point_rounding_mode (212)
    on left: 198 199 200 201, on right: 196
integer_rounding_mode (213)
    on left: 202 203 204 205, on right: 197
compare_spec (214)
    on left: 206 207 208 209 210 211 212 213 214 215 216 217 218 219
    220 221 222 223, on right: 149
operand_list (215)
    on left: 224 225, on right: 125 126 128 225
operand (216)
    on left: 226 227 228 229 230 231 232 233 234 235 236 237 238 239
    240 241 242 243 244 245, on right: 125 126 127 224 225
vector_operand (217)
    on left: 246 247 248 249, on right: 232 233 251
tex_operand (218)
    on left: 251, on right: 234
$@14 (219)
    on left: 250, on right: 251
builtin_operand (220)
    on left: 252 253, on right: 231
memory_operand (221)
    on left: 254 255 256 257 258, on right: 229 258
twin_operand (222)
    on left: 259 260 261 262 263 264 265, on right: 257
literal_operand (223)
    on left: 266 267 268, on right: 64 119 120 230 256
address_expression (224)
    on left: 269 270 271 272 273, on right: 254 255


State 0

    0 $accept: . input $end
    1 input: . %empty
    2      | . input directive_statement
    3      | . input function_defn
    4      | . input function_decl

    $default  reduce using rule 1 (input)

    input  go to state 1


State 1

    0 $accept: input . $end
    2 input: input . directive_statement
    3      | input . function_defn
    4      | input . function_decl
    6 function_defn: . function_decl $@1 statement_block
    9              | . function_decl $@2 block_spec_list $@3 statement_block
   17 function_decl: . function_decl_header LEFT_PAREN $@4 param_entry RIGHT_PAREN $@5 function_ident_param
   19              | . function_decl_header $@6 function_ident_param
   20              | . function_decl_header
   25 function_decl_header: . ENTRY_DIRECTIVE
   26                     | . FUNC_DIRECTIVE
   27                     | . VISIBLE_DIRECTIVE FUNC_DIRECTIVE
   28                     | . EXTERN_DIRECTIVE FUNC_DIRECTIVE
   51 directive_statement: . variable_declaration SEMI_COLON
   52                    | . VERSION_DIRECTIVE DOUBLE_OPERAND
   53                    | . VERSION_DIRECTIVE DOUBLE_OPERAND PLUS
   54                    | . ADDRESS_SIZE_DIRECTIVE INT_OPERAND
   55                    | . TARGET_DIRECTIVE IDENTIFIER COMMA IDENTIFIER
   56                    | . TARGET_DIRECTIVE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER
   57                    | . TARGET_DIRECTIVE IDENTIFIER
   58                    | . FILE_DIRECTIVE INT_OPERAND STRING
   59                    | . LOC_DIRECTIVE INT_OPERAND INT_OPERAND INT_OPERAND
   60                    | . PRAGMA_DIRECTIVE STRING SEMI_COLON
   61                    | . function_decl SEMI_COLON
   62 variable_declaration: . variable_spec identifier_list
   63                     | . variable_spec identifier_spec EQUALS initializer_list
   64                     | . variable_spec identifier_spec EQUALS literal_operand
   65                     | . CONSTPTR_DIRECTIVE IDENTIFIER COMMA IDENTIFIER COMMA INT_OPERAND
   66 variable_spec: . var_spec_list
   73 var_spec_list: . var_spec
   74              | . var_spec_list var_spec
   75 var_spec: . space_spec
   76         | . type_spec
   77         | . align_spec
   78         | . EXTERN_DIRECTIVE
   79 align_spec: . ALIGN_DIRECTIVE INT_OPERAND
   80 space_spec: . REG_DIRECTIVE
   81           | . SREG_DIRECTIVE
   82           | . addressable_spec
   83 addressable_spec: . CONST_DIRECTIVE
   84                 | . GLOBAL_DIRECTIVE
   85                 | . LOCAL_DIRECTIVE
   86                 | . PARAM_DIRECTIVE
   87                 | . SHARED_DIRECTIVE
   88                 | . SURF_DIRECTIVE
   89                 | . TEX_DIRECTIVE
   90 type_spec: . scalar_type
   91          | . vector_spec scalar_type
   92 vector_spec: . V2_TYPE
   93            | . V3_TYPE
   94            | . V4_TYPE
   95 scalar_type: . S8_TYPE
   96            | . S16_TYPE
   97            | . S32_TYPE
   98            | . S64_TYPE
   99            | . U8_TYPE
  100            | . U16_TYPE
  101            | . U32_TYPE
  102            | . U64_TYPE
  103            | . F16_TYPE
  104            | . F32_TYPE
  105            | . F64_TYPE
  106            | . FF64_TYPE
  107            | . B8_TYPE
  108            | . B16_TYPE
  109            | . B32_TYPE
  110            | . B64_TYPE
  111            | . BB64_TYPE
  112            | . BB128_TYPE
  113            | . PRED_TYPE
  114            | . TEXREF_TYPE
  115            | . SAMPLERREF_TYPE
  116            | . SURFREF_TYPE

    $end                    shift, and go to state 2
    ALIGN_DIRECTIVE         shift, and go to state 3
    CONST_DIRECTIVE         shift, and go to state 4
    CONSTPTR_DIRECTIVE      shift, and go to state 5
    ENTRY_DIRECTIVE         shift, and go to state 6
    EXTERN_DIRECTIVE        shift, and go to state 7
    FILE_DIRECTIVE          shift, and go to state 8
    FUNC_DIRECTIVE          shift, and go to state 9
    GLOBAL_DIRECTIVE        shift, and go to state 10
    LOCAL_DIRECTIVE         shift, and go to state 11
    LOC_DIRECTIVE           shift, and go to state 12
    PARAM_DIRECTIVE         shift, and go to state 13
    PRAGMA_DIRECTIVE        shift, and go to state 14
    REG_DIRECTIVE           shift, and go to state 15
    SHARED_DIRECTIVE        shift, and go to state 16
    SREG_DIRECTIVE          shift, and go to state 17
    SURF_DIRECTIVE          shift, and go to state 18
    TARGET_DIRECTIVE        shift, and go to state 19
    TEX_DIRECTIVE           shift, and go to state 20
    VERSION_DIRECTIVE       shift, and go to state 21
    ADDRESS_SIZE_DIRECTIVE  shift, and go to state 22
    VISIBLE_DIRECTIVE       shift, and go to state 23
    S8_TYPE                 shift, and go to state 24
    S16_TYPE                shift, and go to state 25
    S32_TYPE                shift, and go to state 26
    S64_TYPE                shift, and go to state 27
    U8_TYPE                 shift, and go to state 28
    U16_TYPE                shift, and go to state 29
    U32_TYPE                shift, and go to state 30
    U64_TYPE                shift, and go to state 31
    F16_TYPE                shift, and go to state 32
    F32_TYPE                shift, and go to state 33
    F64_TYPE                shift, and go to state 34
    FF64_TYPE               shift, and go to state 35
    B8_TYPE                 shift, and go to state 36
    B16_TYPE                shift, and go to state 37
    B32_TYPE                shift, and go to state 38
    B64_TYPE                shift, and go to state 39
    BB64_TYPE               shift, and go to state 40
    BB128_TYPE              shift, and go to state 41
    PRED_TYPE               shift, and go to state 42
    TEXREF_TYPE             shift, and go to state 43
    SAMPLERREF_TYPE         shift, and go to state 44
    SURFREF_TYPE            shift, and go to state 45
    V2_TYPE                 shift, and go to state 46
    V3_TYPE                 shift, and go to state 47
    V4_TYPE                 shift, and go to state 48

    function_defn         go to state 49
    function_decl         go to state 50
    function_decl_header  go to state 51
    directive_statement   go to state 52
    variable_declaration  go to state 53
    variable_spec         go to state 54
    var_spec_list         go to state 55
    var_spec              go to state 56
    align_spec            go to state 57
    space_spec            go to state 58
    addressable_spec      go to state 59
    type_spec             go to state 60
    vector_spec           go to state 61
    scalar_type           go to state 62


State 2

    0 $accept: input $end .

    $default  accept


State 3

   79 align_spec: ALIGN_DIRECTIVE . INT_OPERAND

    INT_OPERAND  shift, and go to state 63


State 4

   83 addressable_spec: CONST_DIRECTIVE .

    $default  reduce using rule 83 (addressable_spec)


State 5

   65 variable_declaration: CONSTPTR_DIRECTIVE . IDENTIFIER COMMA IDENTIFIER COMMA INT_OPERAND

    IDENTIFIER  shift, and go to state 64


State 6

   25 function_decl_header: ENTRY_DIRECTIVE .

    $default  reduce using rule 25 (function_decl_header)


State 7

   28 function_decl_header: EXTERN_DIRECTIVE . FUNC_DIRECTIVE
   78 var_spec: EXTERN_DIRECTIVE .  [ALIGN_DIRECTIVE, CONST_DIRECTIVE, EXTERN_DIRECTIVE, GLOBAL_DIRECTIVE, LOCAL_DIRECTIVE, PARAM_DIRECTIVE, REG_DIRECTIVE, SHARED_DIRECTIVE, SREG_DIRECTIVE, SURF_DIRECTIVE, TEX_DIRECTIVE, IDENTIFIER, S8_TYPE, S16_TYPE, S32_TYPE, S64_TYPE, U8_TYPE, U16_TYPE, U32_TYPE, U64_TYPE, F16_TYPE, F32_TYPE, F64_TYPE, FF64_TYPE, B8_TYPE, B16_TYPE, B32_TYPE, B64_TYPE, BB64_TYPE, BB128_TYPE, PRED_TYPE, TEXREF_TYPE, SAMPLERREF_TYPE, SURFREF_TYPE, V2_TYPE, V3_TYPE, V4_TYPE]

    FUNC_DIRECTIVE  shift, and go to state 65

    $default  reduce using rule 78 (var_spec)


State 8

   58 directive_statement: FILE_DIRECTIVE . INT_OPERAND STRING

    INT_OPERAND  shift, and go to state 66


State 9

   26 function_decl_header: FUNC_DIRECTIVE .

    $default  reduce using rule 26 (function_decl_header)


State 10

   84 addressable_spec: GLOBAL_DIRECTIVE .

    $default  reduce using rule 84 (addressable_spec)


State 11

   85 addressable_spec: LOCAL_DIRECTIVE .

    $default  reduce using rule 85 (addressable_spec)


State 12

   59 directive_statement: LOC_DIRECTIVE . INT_OPERAND INT_OPERAND INT_OPERAND

    INT_OPERAND  shift, and go to state 67


State 13

   86 addressable_spec: PARAM_DIRECTIVE .

    $default  reduce using rule 86 (addressable_spec)


State 14

   60 directive_statement: PRAGMA_DIRECTIVE . STRING SEMI_COLON

    STRING  shift, and go to state 68


State 15

   80 space_spec: REG_DIRECTIVE .

    $default  reduce using rule 80 (space_spec)


State 16

   87 addressable_spec: SHARED_DIRECTIVE .

    $default  reduce using rule 87 (addressable_spec)


State 17

   81 space_spec: SREG_DIRECTIVE .

    $default  reduce using rule 81 (space_spec)


State 18

   88 addressable_spec: SURF_DIRECTIVE .

    $default  reduce using rule 88 (addressable_spec)


State 19

   55 directive_statement: TARGET_DIRECTIVE . IDENTIFIER COMMA IDENTIFIER
   56                    | TARGET_DIRECTIVE . IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER
   57                    | TARGET_DIRECTIVE . IDENTIFIER

    IDENTIFIER  shift, and go to state 69


State 20

   89 addressable_spec: TEX_DIRECTIVE .

    $default  reduce using rule 89 (addressable_spec)


State 21

   52 directive_statement: VERSION_DIRECTIVE . DOUBLE_OPERAND
   53                    | VERSION_DIRECTIVE . DOUBLE_OPERAND PLUS

    DOUBLE_OPERAND  shift, and go to state 70


State 22

   54 directive_statement: ADDRESS_SIZE_DIRECTIVE . INT_OPERAND

    INT_OPERAND  shift, and go to state 71


State 23

   27 function_decl_header: VISIBLE_DIRECTIVE . FUNC_DIRECTIVE

    FUNC_DIRECTIVE  shift, and go to state 72


State 24

   95 scalar_type: S8_TYPE .

    $default  reduce using rule 95 (scalar_type)


State 25

   96 scalar_type: S16_TYPE .

    $default  reduce using rule 96 (scalar_type)


State 26

   97 scalar_type: S32_TYPE .

    $default  reduce using rule 97 (scalar_type)


State 27

   98 scalar_type: S64_TYPE .

    $default  reduce using rule 98 (scalar_type)


State 28

   99 scalar_type: U8_TYPE .

    $default  reduce using rule 99 (scalar_type)


State 29

  100 scalar_type: U16_TYPE .

    $default  reduce using rule 100 (scalar_type)


State 30

  101 scalar_type: U32_TYPE .

    $default  reduce using rule 101 (scalar_type)


State 31

  102 scalar_type: U64_TYPE .

    $default  reduce using rule 102 (scalar_type)


State 32

  103 scalar_type: F16_TYPE .

    $default  reduce using rule 103 (scalar_type)


State 33

  104 scalar_type: F32_TYPE .

    $default  reduce using rule 104 (scalar_type)


State 34

  105 scalar_type: F64_TYPE .

    $default  reduce using rule 105 (scalar_type)


State 35

  106 scalar_type: FF64_TYPE .

    $default  reduce using rule 106 (scalar_type)


State 36

  107 scalar_type: B8_TYPE .

    $default  reduce using rule 107 (scalar_type)


State 37

  108 scalar_type: B16_TYPE .

    $default  reduce using rule 108 (scalar_type)


State 38

  109 scalar_type: B32_TYPE .

    $default  reduce using rule 109 (scalar_type)


State 39

  110 scalar_type: B64_TYPE .

    $default  reduce using rule 110 (scalar_type)


State 40

  111 scalar_type: BB64_TYPE .

    $default  reduce using rule 111 (scalar_type)


State 41

  112 scalar_type: BB128_TYPE .

    $default  reduce using rule 112 (scalar_type)


State 42

  113 scalar_type: PRED_TYPE .

    $default  reduce using rule 113 (scalar_type)


State 43

  114 scalar_type: TEXREF_TYPE .

    $default  reduce using rule 114 (scalar_type)


State 44

  115 scalar_type: SAMPLERREF_TYPE .

    $default  reduce using rule 115 (scalar_type)


State 45

  116 scalar_type: SURFREF_TYPE .

    $default  reduce using rule 116 (scalar_type)


State 46

   92 vector_spec: V2_TYPE .

    $default  reduce using rule 92 (vector_spec)


State 47

   93 vector_spec: V3_TYPE .

    $default  reduce using rule 93 (vector_spec)


State 48

   94 vector_spec: V4_TYPE .

    $default  reduce using rule 94 (vector_spec)


State 49

    3 input: input function_defn .

    $default  reduce using rule 3 (input)


State 50

    4 input: input function_decl .  [$end, ALIGN_DIRECTIVE, CONST_DIRECTIVE, CONSTPTR_DIRECTIVE, ENTRY_DIRECTIVE, EXTERN_DIRECTIVE, FILE_DIRECTIVE, FUNC_DIRECTIVE, GLOBAL_DIRECTIVE, LOCAL_DIRECTIVE, LOC_DIRECTIVE, PARAM_DIRECTIVE, PRAGMA_DIRECTIVE, REG_DIRECTIVE, SHARED_DIRECTIVE, SREG_DIRECTIVE, SURF_DIRECTIVE, TARGET_DIRECTIVE, TEX_DIRECTIVE, VERSION_DIRECTIVE, ADDRESS_SIZE_DIRECTIVE, VISIBLE_DIRECTIVE, S8_TYPE, S16_TYPE, S32_TYPE, S64_TYPE, U8_TYPE, U16_TYPE, U32_TYPE, U64_TYPE, F16_TYPE, F32_TYPE, F64_TYPE, FF64_TYPE, B8_TYPE, B16_TYPE, B32_TYPE, B64_TYPE, BB64_TYPE, BB128_TYPE, PRED_TYPE, TEXREF_TYPE, SAMPLERREF_TYPE, SURFREF_TYPE, V2_TYPE, V3_TYPE, V4_TYPE]
    5 $@1: . %empty  [LEFT_BRACE]
    6 function_defn: function_decl . $@1 statement_block
    7 $@2: . %empty  [MAXNCTAPERSM_DIRECTIVE, MAXNTID_DIRECTIVE, MINNCTAPERSM_DIRECTIVE]
    9 function_defn: function_decl . $@2 block_spec_list $@3 statement_block
   61 directive_statement: function_decl . SEMI_COLON

    SEMI_COLON  shift, and go to state 73

    MAXNCTAPERSM_DIRECTIVE  reduce using rule 7 ($@2)
    MAXNTID_DIRECTIVE       reduce using rule 7 ($@2)
    MINNCTAPERSM_DIRECTIVE  reduce using rule 7 ($@2)
    LEFT_BRACE              reduce using rule 5 ($@1)
    $default                reduce using rule 4 (input)

    $@1  go to state 74
    $@2  go to state 75


State 51

   17 function_decl: function_decl_header . LEFT_PAREN $@4 param_entry RIGHT_PAREN $@5 function_ident_param
   18 $@6: . %empty  [IDENTIFIER]
   19 function_decl: function_decl_header . $@6 function_ident_param
   20              | function_decl_header .  [$end, ALIGN_DIRECTIVE, CONST_DIRECTIVE, CONSTPTR_DIRECTIVE, ENTRY_DIRECTIVE, EXTERN_DIRECTIVE, FILE_DIRECTIVE, FUNC_DIRECTIVE, GLOBAL_DIRECTIVE, LOCAL_DIRECTIVE, LOC_DIRECTIVE, MAXNCTAPERSM_DIRECTIVE, MAXNTID_DIRECTIVE, MINNCTAPERSM_DIRECTIVE, PARAM_DIRECTIVE, PRAGMA_DIRECTIVE, REG_DIRECTIVE, SHARED_DIRECTIVE, SREG_DIRECTIVE, SURF_DIRECTIVE, TARGET_DIRECTIVE, TEX_DIRECTIVE, VERSION_DIRECTIVE, ADDRESS_SIZE_DIRECTIVE, VISIBLE_DIRECTIVE, S8_TYPE, S16_TYPE, S32_TYPE, S64_TYPE, U8_TYPE, U16_TYPE, U32_TYPE, U64_TYPE, F16_TYPE, F32_TYPE, F64_TYPE, FF64_TYPE, B8_TYPE, B16_TYPE, B32_TYPE, B64_TYPE, BB64_TYPE, BB128_TYPE, PRED_TYPE, TEXREF_TYPE, SAMPLERREF_TYPE, SURFREF_TYPE, V2_TYPE, V3_TYPE, V4_TYPE, SEMI_COLON, LEFT_BRACE]

    LEFT_PAREN  shift, and go to state 76

    IDENTIFIER  reduce using rule 18 ($@6)
    $default    reduce using rule 20 (function_decl)

    $@6  go to state 77


State 52

    2 input: input directive_statement .

    $default  reduce using rule 2 (input)


State 53

   51 directive_statement: variable_declaration . SEMI_COLON

    SEMI_COLON  shift, and go to state 78


State 54

   62 variable_declaration: variable_spec . identifier_list
   63                     | variable_spec . identifier_spec EQUALS initializer_list
   64                     | variable_spec . identifier_spec EQUALS literal_operand
   67 identifier_list: . identifier_spec
   68                | . identifier_list COMMA identifier_spec
   69 identifier_spec: . IDENTIFIER
   70                | . IDENTIFIER LEFT_ANGLE_BRACKET INT_OPERAND RIGHT_ANGLE_BRACKET
   71                | . IDENTIFIER LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
   72                | . IDENTIFIER LEFT_SQUARE_BRACKET INT_OPERAND RIGHT_SQUARE_BRACKET

    IDENTIFIER  shift, and go to state 79

    identifier_list  go to state 80
    identifier_spec  go to state 81


State 55

   66 variable_spec: var_spec_list .  [PTR_DIRECTIVE, IDENTIFIER]
   74 var_spec_list: var_spec_list . var_spec
   75 var_spec: . space_spec
   76         | . type_spec
   77         | . align_spec
   78         | . EXTERN_DIRECTIVE
   79 align_spec: . ALIGN_DIRECTIVE INT_OPERAND
   80 space_spec: . REG_DIRECTIVE
   81           | . SREG_DIRECTIVE
   82           | . addressable_spec
   83 addressable_spec: . CONST_DIRECTIVE
   84                 | . GLOBAL_DIRECTIVE
   85                 | . LOCAL_DIRECTIVE
   86                 | . PARAM_DIRECTIVE
   87                 | . SHARED_DIRECTIVE
   88                 | . SURF_DIRECTIVE
   89                 | . TEX_DIRECTIVE
   90 type_spec: . scalar_type
   91          | . vector_spec scalar_type
   92 vector_spec: . V2_TYPE
   93            | . V3_TYPE
   94            | . V4_TYPE
   95 scalar_type: . S8_TYPE
   96            | . S16_TYPE
   97            | . S32_TYPE
   98            | . S64_TYPE
   99            | . U8_TYPE
  100            | . U16_TYPE
  101            | . U32_TYPE
  102            | . U64_TYPE
  103            | . F16_TYPE
  104            | . F32_TYPE
  105            | . F64_TYPE
  106            | . FF64_TYPE
  107            | . B8_TYPE
  108            | . B16_TYPE
  109            | . B32_TYPE
  110            | . B64_TYPE
  111            | . BB64_TYPE
  112            | . BB128_TYPE
  113            | . PRED_TYPE
  114            | . TEXREF_TYPE
  115            | . SAMPLERREF_TYPE
  116            | . SURFREF_TYPE

    ALIGN_DIRECTIVE   shift, and go to state 3
    CONST_DIRECTIVE   shift, and go to state 4
    EXTERN_DIRECTIVE  shift, and go to state 82
    GLOBAL_DIRECTIVE  shift, and go to state 10
    LOCAL_DIRECTIVE   shift, and go to state 11
    PARAM_DIRECTIVE   shift, and go to state 13
    REG_DIRECTIVE     shift, and go to state 15
    SHARED_DIRECTIVE  shift, and go to state 16
    SREG_DIRECTIVE    shift, and go to state 17
    SURF_DIRECTIVE    shift, and go to state 18
    TEX_DIRECTIVE     shift, and go to state 20
    S8_TYPE           shift, and go to state 24
    S16_TYPE          shift, and go to state 25
    S32_TYPE          shift, and go to state 26
    S64_TYPE          shift, and go to state 27
    U8_TYPE           shift, and go to state 28
    U16_TYPE          shift, and go to state 29
    U32_TYPE          shift, and go to state 30
    U64_TYPE          shift, and go to state 31
    F16_TYPE          shift, and go to state 32
    F32_TYPE          shift, and go to state 33
    F64_TYPE          shift, and go to state 34
    FF64_TYPE         shift, and go to state 35
    B8_TYPE           shift, and go to state 36
    B16_TYPE          shift, and go to state 37
    B32_TYPE          shift, and go to state 38
    B64_TYPE          shift, and go to state 39
    BB64_TYPE         shift, and go to state 40
    BB128_TYPE        shift, and go to state 41
    PRED_TYPE         shift, and go to state 42
    TEXREF_TYPE       shift, and go to state 43
    SAMPLERREF_TYPE   shift, and go to state 44
    SURFREF_TYPE      shift, and go to state 45
    V2_TYPE           shift, and go to state 46
    V3_TYPE           shift, and go to state 47
    V4_TYPE           shift, and go to state 48

    $default  reduce using rule 66 (variable_spec)

    var_spec          go to state 83
    align_spec        go to state 57
    space_spec        go to state 58
    addressable_spec  go to state 59
    type_spec         go to state 60
    vector_spec       go to state 61
    scalar_type       go to state 62


State 56

   73 var_spec_list: var_spec .

    $default  reduce using rule 73 (var_spec_list)


State 57

   77 var_spec: align_spec .

    $default  reduce using rule 77 (var_spec)


State 58

   75 var_spec: space_spec .

    $default  reduce using rule 75 (var_spec)


State 59

   82 space_spec: addressable_spec .

    $default  reduce using rule 82 (space_spec)


State 60

   76 var_spec: type_spec .

    $default  reduce using rule 76 (var_spec)


State 61

   91 type_spec: vector_spec . scalar_type
   95 scalar_type: . S8_TYPE
   96            | . S16_TYPE
   97            | . S32_TYPE
   98            | . S64_TYPE
   99            | . U8_TYPE
  100            | . U16_TYPE
  101            | . U32_TYPE
  102            | . U64_TYPE
  103            | . F16_TYPE
  104            | . F32_TYPE
  105            | . F64_TYPE
  106            | . FF64_TYPE
  107            | . B8_TYPE
  108            | . B16_TYPE
  109            | . B32_TYPE
  110            | . B64_TYPE
  111            | . BB64_TYPE
  112            | . BB128_TYPE
  113            | . PRED_TYPE
  114            | . TEXREF_TYPE
  115            | . SAMPLERREF_TYPE
  116            | . SURFREF_TYPE

    S8_TYPE          shift, and go to state 24
    S16_TYPE         shift, and go to state 25
    S32_TYPE         shift, and go to state 26
    S64_TYPE         shift, and go to state 27
    U8_TYPE          shift, and go to state 28
    U16_TYPE         shift, and go to state 29
    U32_TYPE         shift, and go to state 30
    U64_TYPE         shift, and go to state 31
    F16_TYPE         shift, and go to state 32
    F32_TYPE         shift, and go to state 33
    F64_TYPE         shift, and go to state 34
    FF64_TYPE        shift, and go to state 35
    B8_TYPE          shift, and go to state 36
    B16_TYPE         shift, and go to state 37
    B32_TYPE         shift, and go to state 38
    B64_TYPE         shift, and go to state 39
    BB64_TYPE        shift, and go to state 40
    BB128_TYPE       shift, and go to state 41
    PRED_TYPE        shift, and go to state 42
    TEXREF_TYPE      shift, and go to state 43
    SAMPLERREF_TYPE  shift, and go to state 44
    SURFREF_TYPE     shift, and go to state 45

    scalar_type  go to state 84


State 62

   90 type_spec: scalar_type .

    $default  reduce using rule 90 (type_spec)


State 63

   79 align_spec: ALIGN_DIRECTIVE INT_OPERAND .

    $default  reduce using rule 79 (align_spec)


State 64

   65 variable_declaration: CONSTPTR_DIRECTIVE IDENTIFIER . COMMA IDENTIFIER COMMA INT_OPERAND

    COMMA  shift, and go to state 85


State 65

   28 function_decl_header: EXTERN_DIRECTIVE FUNC_DIRECTIVE .

    $default  reduce using rule 28 (function_decl_header)


State 66

   58 directive_statement: FILE_DIRECTIVE INT_OPERAND . STRING

    STRING  shift, and go to state 86


State 67

   59 directive_statement: LOC_DIRECTIVE INT_OPERAND . INT_OPERAND INT_OPERAND

    INT_OPERAND  shift, and go to state 87


State 68

   60 directive_statement: PRAGMA_DIRECTIVE STRING . SEMI_COLON

    SEMI_COLON  shift, and go to state 88


State 69

   55 directive_statement: TARGET_DIRECTIVE IDENTIFIER . COMMA IDENTIFIER
   56                    | TARGET_DIRECTIVE IDENTIFIER . COMMA IDENTIFIER COMMA IDENTIFIER
   57                    | TARGET_DIRECTIVE IDENTIFIER .  [$end, OPCODE, ALIGN_DIRECTIVE, CONST_DIRECTIVE, CONSTPTR_DIRECTIVE, ENTRY_DIRECTIVE, EXTERN_DIRECTIVE, FILE_DIRECTIVE, FUNC_DIRECTIVE, GLOBAL_DIRECTIVE, LOCAL_DIRECTIVE, LOC_DIRECTIVE, PARAM_DIRECTIVE, PRAGMA_DIRECTIVE, REG_DIRECTIVE, SHARED_DIRECTIVE, SREG_DIRECTIVE, SURF_DIRECTIVE, TARGET_DIRECTIVE, TEX_DIRECTIVE, VERSION_DIRECTIVE, ADDRESS_SIZE_DIRECTIVE, VISIBLE_DIRECTIVE, IDENTIFIER, S8_TYPE, S16_TYPE, S32_TYPE, S64_TYPE, U8_TYPE, U16_TYPE, U32_TYPE, U64_TYPE, F16_TYPE, F32_TYPE, F64_TYPE, FF64_TYPE, B8_TYPE, B16_TYPE, B32_TYPE, B64_TYPE, BB64_TYPE, BB128_TYPE, PRED_TYPE, TEXREF_TYPE, SAMPLERREF_TYPE, SURFREF_TYPE, V2_TYPE, V3_TYPE, V4_TYPE, PRED, RIGHT_BRACE, LEFT_BRACE]

    COMMA  shift, and go to state 89

    $default  reduce using rule 57 (directive_statement)


State 70

   52 directive_statement: VERSION_DIRECTIVE DOUBLE_OPERAND .  [$end, OPCODE, ALIGN_DIRECTIVE, CONST_DIRECTIVE, CONSTPTR_DIRECTIVE, ENTRY_DIRECTIVE, EXTERN_DIRECTIVE, FILE_DIRECTIVE, FUNC_DIRECTIVE, GLOBAL_DIRECTIVE, LOCAL_DIRECTIVE, LOC_DIRECTIVE, PARAM_DIRECTIVE, PRAGMA_DIRECTIVE, REG_DIRECTIVE, SHARED_DIRECTIVE, SREG_DIRECTIVE, SURF_DIRECTIVE, TARGET_DIRECTIVE, TEX_DIRECTIVE, VERSION_DIRECTIVE, ADDRESS_SIZE_DIRECTIVE, VISIBLE_DIRECTIVE, IDENTIFIER, S8_TYPE, S16_TYPE, S32_TYPE, S64_TYPE, U8_TYPE, U16_TYPE, U32_TYPE, U64_TYPE, F16_TYPE, F32_TYPE, F64_TYPE, FF64_TYPE, B8_TYPE, B16_TYPE, B32_TYPE, B64_TYPE, BB64_TYPE, BB128_TYPE, PRED_TYPE, TEXREF_TYPE, SAMPLERREF_TYPE, SURFREF_TYPE, V2_TYPE, V3_TYPE, V4_TYPE, PRED, RIGHT_BRACE, LEFT_BRACE]
   53                    | VERSION_DIRECTIVE DOUBLE_OPERAND . PLUS

    PLUS  shift, and go to state 90

    $default  reduce using rule 52 (directive_statement)


State 71

   54 directive_statement: ADDRESS_SIZE_DIRECTIVE INT_OPERAND .

    $default  reduce using rule 54 (directive_statement)


State 72

   27 function_decl_header: VISIBLE_DIRECTIVE FUNC_DIRECTIVE .

    $default  reduce using rule 27 (function_decl_header)


State 73

   61 directive_statement: function_decl SEMI_COLON .

    $default  reduce using rule 61 (directive_statement)


State 74

    6 function_defn: function_decl $@1 . statement_block
   44 statement_block: . LEFT_BRACE statement_list RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 91

    statement_block  go to state 92


State 75

    9 function_defn: function_decl $@2 . block_spec_list $@3 statement_block
   10 block_spec: . MAXNTID_DIRECTIVE INT_OPERAND COMMA INT_OPERAND COMMA INT_OPERAND
   11           | . MINNCTAPERSM_DIRECTIVE INT_OPERAND
   12           | . MAXNCTAPERSM_DIRECTIVE INT_OPERAND
   13 block_spec_list: . block_spec
   14                | . block_spec_list block_spec

    MAXNCTAPERSM_DIRECTIVE  shift, and go to state 93
    MAXNTID_DIRECTIVE       shift, and go to state 94
    MINNCTAPERSM_DIRECTIVE  shift, and go to state 95

    block_spec       go to state 96
    block_spec_list  go to state 97


State 76

   15 $@4: . %empty
   17 function_decl: function_decl_header LEFT_PAREN . $@4 param_entry RIGHT_PAREN $@5 function_ident_param

    $default  reduce using rule 15 ($@4)

    $@4  go to state 98


State 77

   19 function_decl: function_decl_header $@6 . function_ident_param
   23 function_ident_param: . IDENTIFIER $@7 LEFT_PAREN $@8 param_list RIGHT_PAREN
   24                     | . IDENTIFIER

    IDENTIFIER  shift, and go to state 99

    function_ident_param  go to state 100


State 78

   51 directive_statement: variable_declaration SEMI_COLON .

    $default  reduce using rule 51 (directive_statement)


State 79

   69 identifier_spec: IDENTIFIER .  [COMMA, SEMI_COLON, EQUALS, RIGHT_PAREN]
   70                | IDENTIFIER . LEFT_ANGLE_BRACKET INT_OPERAND RIGHT_ANGLE_BRACKET
   71                | IDENTIFIER . LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
   72                | IDENTIFIER . LEFT_SQUARE_BRACKET INT_OPERAND RIGHT_SQUARE_BRACKET

    LEFT_SQUARE_BRACKET  shift, and go to state 101
    LEFT_ANGLE_BRACKET   shift, and go to state 102

    $default  reduce using rule 69 (identifier_spec)


State 80

   62 variable_declaration: variable_spec identifier_list .  [SEMI_COLON]
   68 identifier_list: identifier_list . COMMA identifier_spec

    COMMA  shift, and go to state 103

    $default  reduce using rule 62 (variable_declaration)


State 81

   63 variable_declaration: variable_spec identifier_spec . EQUALS initializer_list
   64                     | variable_spec identifier_spec . EQUALS literal_operand
   67 identifier_list: identifier_spec .  [COMMA, SEMI_COLON]

    EQUALS  shift, and go to state 104

    $default  reduce using rule 67 (identifier_list)


State 82

   78 var_spec: EXTERN_DIRECTIVE .

    $default  reduce using rule 78 (var_spec)


State 83

   74 var_spec_list: var_spec_list var_spec .

    $default  reduce using rule 74 (var_spec_list)


State 84

   91 type_spec: vector_spec scalar_type .

    $default  reduce using rule 91 (type_spec)


State 85

   65 variable_declaration: CONSTPTR_DIRECTIVE IDENTIFIER COMMA . IDENTIFIER COMMA INT_OPERAND

    IDENTIFIER  shift, and go to state 105


State 86

   58 directive_statement: FILE_DIRECTIVE INT_OPERAND STRING .

    $default  reduce using rule 58 (directive_statement)


State 87

   59 directive_statement: LOC_DIRECTIVE INT_OPERAND INT_OPERAND . INT_OPERAND

    INT_OPERAND  shift, and go to state 106


State 88

   60 directive_statement: PRAGMA_DIRECTIVE STRING SEMI_COLON .

    $default  reduce using rule 60 (directive_statement)


State 89

   55 directive_statement: TARGET_DIRECTIVE IDENTIFIER COMMA . IDENTIFIER
   56                    | TARGET_DIRECTIVE IDENTIFIER COMMA . IDENTIFIER COMMA IDENTIFIER

    IDENTIFIER  shift, and go to state 107


State 90

   53 directive_statement: VERSION_DIRECTIVE DOUBLE_OPERAND PLUS .

    $default  reduce using rule 53 (directive_statement)


State 91

   17 function_decl: . function_decl_header LEFT_PAREN $@4 param_entry RIGHT_PAREN $@5 function_ident_param
   19              | . function_decl_header $@6 function_ident_param
   20              | . function_decl_header
   25 function_decl_header: . ENTRY_DIRECTIVE
   26                     | . FUNC_DIRECTIVE
   27                     | . VISIBLE_DIRECTIVE FUNC_DIRECTIVE
   28                     | . EXTERN_DIRECTIVE FUNC_DIRECTIVE
   44 statement_block: . LEFT_BRACE statement_list RIGHT_BRACE
   44                | LEFT_BRACE . statement_list RIGHT_BRACE
   45 statement_list: . directive_statement
   46               | . instruction_statement
   47               | . statement_list directive_statement
   48               | . statement_list instruction_statement
   49               | . statement_list statement_block
   50               | . statement_block
   51 directive_statement: . variable_declaration SEMI_COLON
   52                    | . VERSION_DIRECTIVE DOUBLE_OPERAND
   53                    | . VERSION_DIRECTIVE DOUBLE_OPERAND PLUS
   54                    | . ADDRESS_SIZE_DIRECTIVE INT_OPERAND
   55                    | . TARGET_DIRECTIVE IDENTIFIER COMMA IDENTIFIER
   56                    | . TARGET_DIRECTIVE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER
   57                    | . TARGET_DIRECTIVE IDENTIFIER
   58                    | . FILE_DIRECTIVE INT_OPERAND STRING
   59                    | . LOC_DIRECTIVE INT_OPERAND INT_OPERAND INT_OPERAND
   60                    | . PRAGMA_DIRECTIVE STRING SEMI_COLON
   61                    | . function_decl SEMI_COLON
   62 variable_declaration: . variable_spec identifier_list
   63                     | . variable_spec identifier_spec EQUALS initializer_list
   64                     | . variable_spec identifier_spec EQUALS literal_operand
   65                     | . CONSTPTR_DIRECTIVE IDENTIFIER COMMA IDENTIFIER COMMA INT_OPERAND
   66 variable_spec: . var_spec_list
   73 var_spec_list: . var_spec
   74              | . var_spec_list var_spec
   75 var_spec: . space_spec
   76         | . type_spec
   77         | . align_spec
   78         | . EXTERN_DIRECTIVE
   79 align_spec: . ALIGN_DIRECTIVE INT_OPERAND
   80 space_spec: . REG_DIRECTIVE
   81           | . SREG_DIRECTIVE
   82           | . addressable_spec
   83 addressable_spec: . CONST_DIRECTIVE
   84                 | . GLOBAL_DIRECTIVE
   85                 | . LOCAL_DIRECTIVE
   86                 | . PARAM_DIRECTIVE
   87                 | . SHARED_DIRECTIVE
   88                 | . SURF_DIRECTIVE
   89                 | . TEX_DIRECTIVE
   90 type_spec: . scalar_type
   91          | . vector_spec scalar_type
   92 vector_spec: . V2_TYPE
   93            | . V3_TYPE
   94            | . V4_TYPE
   95 scalar_type: . S8_TYPE
   96            | . S16_TYPE
   97            | . S32_TYPE
   98            | . S64_TYPE
   99            | . U8_TYPE
  100            | . U16_TYPE
  101            | . U32_TYPE
  102            | . U64_TYPE
  103            | . F16_TYPE
  104            | . F32_TYPE
  105            | . F64_TYPE
  106            | . FF64_TYPE
  107            | . B8_TYPE
  108            | . B16_TYPE
  109            | . B32_TYPE
  110            | . B64_TYPE
  111            | . BB64_TYPE
  112            | . BB128_TYPE
  113            | . PRED_TYPE
  114            | . TEXREF_TYPE
  115            | . SAMPLERREF_TYPE
  116            | . SURFREF_TYPE
  121 instruction_statement: . instruction SEMI_COLON
  122                      | . IDENTIFIER COLON
  123                      | . pred_spec instruction SEMI_COLON
  125 instruction: . opcode_spec LEFT_PAREN operand RIGHT_PAREN $@12 COMMA operand COMMA LEFT_PAREN operand_list RIGHT_PAREN
  126            | . opcode_spec operand COMMA LEFT_PAREN operand_list RIGHT_PAREN
  127            | . opcode_spec operand COMMA LEFT_PAREN RIGHT_PAREN
  128            | . opcode_spec operand_list
  129            | . opcode_spec
  131 opcode_spec: . OPCODE $@13 option_list
  132            | . OPCODE
  133 pred_spec: . PRED IDENTIFIER
  134          | . PRED EXCLAMATION IDENTIFIER
  135          | . PRED IDENTIFIER LT_OPTION
  136          | . PRED IDENTIFIER EQ_OPTION
  137          | . PRED IDENTIFIER LE_OPTION
  138          | . PRED IDENTIFIER NE_OPTION
  139          | . PRED IDENTIFIER GE_OPTION
  140          | . PRED IDENTIFIER EQU_OPTION
  141          | . PRED IDENTIFIER GTU_OPTION
  142          | . PRED IDENTIFIER NEU_OPTION
  143          | . PRED IDENTIFIER CF_OPTION
  144          | . PRED IDENTIFIER SF_OPTION
  145          | . PRED IDENTIFIER NSF_OPTION

    OPCODE                  shift, and go to state 108
    ALIGN_DIRECTIVE         shift, and go to state 3
    CONST_DIRECTIVE         shift, and go to state 4
    CONSTPTR_DIRECTIVE      shift, and go to state 5
    ENTRY_DIRECTIVE         shift, and go to state 6
    EXTERN_DIRECTIVE        shift, and go to state 7
    FILE_DIRECTIVE          shift, and go to state 8
    FUNC_DIRECTIVE          shift, and go to state 9
    GLOBAL_DIRECTIVE        shift, and go to state 10
    LOCAL_DIRECTIVE         shift, and go to state 11
    LOC_DIRECTIVE           shift, and go to state 12
    PARAM_DIRECTIVE         shift, and go to state 13
    PRAGMA_DIRECTIVE        shift, and go to state 14
    REG_DIRECTIVE           shift, and go to state 15
    SHARED_DIRECTIVE        shift, and go to state 16
    SREG_DIRECTIVE          shift, and go to state 17
    SURF_DIRECTIVE          shift, and go to state 18
    TARGET_DIRECTIVE        shift, and go to state 19
    TEX_DIRECTIVE           shift, and go to state 20
    VERSION_DIRECTIVE       shift, and go to state 21
    ADDRESS_SIZE_DIRECTIVE  shift, and go to state 22
    VISIBLE_DIRECTIVE       shift, and go to state 23
    IDENTIFIER              shift, and go to state 109
    S8_TYPE                 shift, and go to state 24
    S16_TYPE                shift, and go to state 25
    S32_TYPE                shift, and go to state 26
    S64_TYPE                shift, and go to state 27
    U8_TYPE                 shift, and go to state 28
    U16_TYPE                shift, and go to state 29
    U32_TYPE                shift, and go to state 30
    U64_TYPE                shift, and go to state 31
    F16_TYPE                shift, and go to state 32
    F32_TYPE                shift, and go to state 33
    F64_TYPE                shift, and go to state 34
    FF64_TYPE               shift, and go to state 35
    B8_TYPE                 shift, and go to state 36
    B16_TYPE                shift, and go to state 37
    B32_TYPE                shift, and go to state 38
    B64_TYPE                shift, and go to state 39
    BB64_TYPE               shift, and go to state 40
    BB128_TYPE              shift, and go to state 41
    PRED_TYPE               shift, and go to state 42
    TEXREF_TYPE             shift, and go to state 43
    SAMPLERREF_TYPE         shift, and go to state 44
    SURFREF_TYPE            shift, and go to state 45
    V2_TYPE                 shift, and go to state 46
    V3_TYPE                 shift, and go to state 47
    V4_TYPE                 shift, and go to state 48
    PRED                    shift, and go to state 110
    LEFT_BRACE              shift, and go to state 91

    function_decl          go to state 111
    function_decl_header   go to state 51
    statement_block        go to state 112
    statement_list         go to state 113
    directive_statement    go to state 114
    variable_declaration   go to state 53
    variable_spec          go to state 54
    var_spec_list          go to state 55
    var_spec               go to state 56
    align_spec             go to state 57
    space_spec             go to state 58
    addressable_spec       go to state 59
    type_spec              go to state 60
    vector_spec            go to state 61
    scalar_type            go to state 62
    instruction_statement  go to state 115
    instruction            go to state 116
    opcode_spec            go to state 117
    pred_spec              go to state 118


State 92

    6 function_defn: function_decl $@1 statement_block .

    $default  reduce using rule 6 (function_defn)


State 93

   12 block_spec: MAXNCTAPERSM_DIRECTIVE . INT_OPERAND

    INT_OPERAND  shift, and go to state 119


State 94

   10 block_spec: MAXNTID_DIRECTIVE . INT_OPERAND COMMA INT_OPERAND COMMA INT_OPERAND

    INT_OPERAND  shift, and go to state 120


State 95

   11 block_spec: MINNCTAPERSM_DIRECTIVE . INT_OPERAND

    INT_OPERAND  shift, and go to state 121


State 96

   13 block_spec_list: block_spec .

    $default  reduce using rule 13 (block_spec_list)


State 97

    8 $@3: . %empty  [LEFT_BRACE]
    9 function_defn: function_decl $@2 block_spec_list . $@3 statement_block
   10 block_spec: . MAXNTID_DIRECTIVE INT_OPERAND COMMA INT_OPERAND COMMA INT_OPERAND
   11           | . MINNCTAPERSM_DIRECTIVE INT_OPERAND
   12           | . MAXNCTAPERSM_DIRECTIVE INT_OPERAND
   14 block_spec_list: block_spec_list . block_spec

    MAXNCTAPERSM_DIRECTIVE  shift, and go to state 93
    MAXNTID_DIRECTIVE       shift, and go to state 94
    MINNCTAPERSM_DIRECTIVE  shift, and go to state 95

    $default  reduce using rule 8 ($@3)

    $@3         go to state 122
    block_spec  go to state 123


State 98

   17 function_decl: function_decl_header LEFT_PAREN $@4 . param_entry RIGHT_PAREN $@5 function_ident_param
   34 param_entry: . PARAM_DIRECTIVE $@10 variable_spec ptr_spec identifier_spec
   36            | . REG_DIRECTIVE $@11 variable_spec identifier_spec

    PARAM_DIRECTIVE  shift, and go to state 124
    REG_DIRECTIVE    shift, and go to state 125

    param_entry  go to state 126


State 99

   21 $@7: . %empty  [LEFT_PAREN]
   23 function_ident_param: IDENTIFIER . $@7 LEFT_PAREN $@8 param_list RIGHT_PAREN
   24                     | IDENTIFIER .  [$end, ALIGN_DIRECTIVE, CONST_DIRECTIVE, CONSTPTR_DIRECTIVE, ENTRY_DIRECTIVE, EXTERN_DIRECTIVE, FILE_DIRECTIVE, FUNC_DIRECTIVE, GLOBAL_DIRECTIVE, LOCAL_DIRECTIVE, LOC_DIRECTIVE, MAXNCTAPERSM_DIRECTIVE, MAXNTID_DIRECTIVE, MINNCTAPERSM_DIRECTIVE, PARAM_DIRECTIVE, PRAGMA_DIRECTIVE, REG_DIRECTIVE, SHARED_DIRECTIVE, SREG_DIRECTIVE, SURF_DIRECTIVE, TARGET_DIRECTIVE, TEX_DIRECTIVE, VERSION_DIRECTIVE, ADDRESS_SIZE_DIRECTIVE, VISIBLE_DIRECTIVE, S8_TYPE, S16_TYPE, S32_TYPE, S64_TYPE, U8_TYPE, U16_TYPE, U32_TYPE, U64_TYPE, F16_TYPE, F32_TYPE, F64_TYPE, FF64_TYPE, B8_TYPE, B16_TYPE, B32_TYPE, B64_TYPE, BB64_TYPE, BB128_TYPE, PRED_TYPE, TEXREF_TYPE, SAMPLERREF_TYPE, SURFREF_TYPE, V2_TYPE, V3_TYPE, V4_TYPE, SEMI_COLON, LEFT_BRACE]

    LEFT_PAREN  reduce using rule 21 ($@7)
    $default    reduce using rule 24 (function_ident_param)

    $@7  go to state 127


State 100

   19 function_decl: function_decl_header $@6 function_ident_param .

    $default  reduce using rule 19 (function_decl)


State 101

   71 identifier_spec: IDENTIFIER LEFT_SQUARE_BRACKET . RIGHT_SQUARE_BRACKET
   72                | IDENTIFIER LEFT_SQUARE_BRACKET . INT_OPERAND RIGHT_SQUARE_BRACKET

    INT_OPERAND           shift, and go to state 128
    RIGHT_SQUARE_BRACKET  shift, and go to state 129


State 102

   70 identifier_spec: IDENTIFIER LEFT_ANGLE_BRACKET . INT_OPERAND RIGHT_ANGLE_BRACKET

    INT_OPERAND  shift, and go to state 130


State 103

   68 identifier_list: identifier_list COMMA . identifier_spec
   69 identifier_spec: . IDENTIFIER
   70                | . IDENTIFIER LEFT_ANGLE_BRACKET INT_OPERAND RIGHT_ANGLE_BRACKET
   71                | . IDENTIFIER LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
   72                | . IDENTIFIER LEFT_SQUARE_BRACKET INT_OPERAND RIGHT_SQUARE_BRACKET

    IDENTIFIER  shift, and go to state 79

    identifier_spec  go to state 131


State 104

   63 variable_declaration: variable_spec identifier_spec EQUALS . initializer_list
   64                     | variable_spec identifier_spec EQUALS . literal_operand
  117 initializer_list: . LEFT_BRACE literal_list RIGHT_BRACE
  118                 | . LEFT_BRACE initializer_list RIGHT_BRACE
  266 literal_operand: . INT_OPERAND
  267                | . FLOAT_OPERAND
  268                | . DOUBLE_OPERAND

    INT_OPERAND     shift, and go to state 132
    FLOAT_OPERAND   shift, and go to state 133
    DOUBLE_OPERAND  shift, and go to state 134
    LEFT_BRACE      shift, and go to state 135

    initializer_list  go to state 136
    literal_operand   go to state 137


State 105

   65 variable_declaration: CONSTPTR_DIRECTIVE IDENTIFIER COMMA IDENTIFIER . COMMA INT_OPERAND

    COMMA  shift, and go to state 138


State 106

   59 directive_statement: LOC_DIRECTIVE INT_OPERAND INT_OPERAND INT_OPERAND .

    $default  reduce using rule 59 (directive_statement)


State 107

   55 directive_statement: TARGET_DIRECTIVE IDENTIFIER COMMA IDENTIFIER .  [$end, OPCODE, ALIGN_DIRECTIVE, CONST_DIRECTIVE, CONSTPTR_DIRECTIVE, ENTRY_DIRECTIVE, EXTERN_DIRECTIVE, FILE_DIRECTIVE, FUNC_DIRECTIVE, GLOBAL_DIRECTIVE, LOCAL_DIRECTIVE, LOC_DIRECTIVE, PARAM_DIRECTIVE, PRAGMA_DIRECTIVE, REG_DIRECTIVE, SHARED_DIRECTIVE, SREG_DIRECTIVE, SURF_DIRECTIVE, TARGET_DIRECTIVE, TEX_DIRECTIVE, VERSION_DIRECTIVE, ADDRESS_SIZE_DIRECTIVE, VISIBLE_DIRECTIVE, IDENTIFIER, S8_TYPE, S16_TYPE, S32_TYPE, S64_TYPE, U8_TYPE, U16_TYPE, U32_TYPE, U64_TYPE, F16_TYPE, F32_TYPE, F64_TYPE, FF64_TYPE, B8_TYPE, B16_TYPE, B32_TYPE, B64_TYPE, BB64_TYPE, BB128_TYPE, PRED_TYPE, TEXREF_TYPE, SAMPLERREF_TYPE, SURFREF_TYPE, V2_TYPE, V3_TYPE, V4_TYPE, PRED, RIGHT_BRACE, LEFT_BRACE]
   56                    | TARGET_DIRECTIVE IDENTIFIER COMMA IDENTIFIER . COMMA IDENTIFIER

    COMMA  shift, and go to state 139

    $default  reduce using rule 55 (directive_statement)


State 108

  130 $@13: . %empty  [CONST_DIRECTIVE, GLOBAL_DIRECTIVE, LOCAL_DIRECTIVE, PARAM_DIRECTIVE, SHARED_DIRECTIVE, SURF_DIRECTIVE, TEX_DIRECTIVE, S8_TYPE, S16_TYPE, S32_TYPE, S64_TYPE, U8_TYPE, U16_TYPE, U32_TYPE, U64_TYPE, F16_TYPE, F32_TYPE, F64_TYPE, FF64_TYPE, B8_TYPE, B16_TYPE, B32_TYPE, B64_TYPE, BB64_TYPE, BB128_TYPE, PRED_TYPE, TEXREF_TYPE, SAMPLERREF_TYPE, SURFREF_TYPE, V2_TYPE, V3_TYPE, V4_TYPE, HALF_OPTION, EQ_OPTION, NE_OPTION, LT_OPTION, LE_OPTION, GT_OPTION, GE_OPTION, LO_OPTION, LS_OPTION, HI_OPTION, HS_OPTION, EQU_OPTION, NEU_OPTION, LTU_OPTION, LEU_OPTION, GTU_OPTION, GEU_OPTION, NUM_OPTION, NAN_OPTION, WIDE_OPTION, RN_OPTION, RZ_OPTION, RM_OPTION, RP_OPTION, RNI_OPTION, RZI_OPTION, RMI_OPTION, RPI_OPTION, UNI_OPTION, GEOM_MODIFIER_1D, GEOM_MODIFIER_2D, GEOM_MODIFIER_3D, SAT_OPTION, FTZ_OPTION, NEG_OPTION, SYNC_OPTION, RED_OPTION, POPC_REDUCTION, AND_REDUCTION, OR_REDUCTION, ARRIVE_OPTION, ATOMIC_AND, ATOMIC_OR, ATOMIC_XOR, ATOMIC_CAS, ATOMIC_EXCH, ATOMIC_ADD, ATOMIC_INC, ATOMIC_DEC, ATOMIC_MIN, ATOMIC_MAX, APPROX_OPTION, FULL_OPTION, ANY_OPTION, ALL_OPTION, BALLOT_OPTION, GLOBAL_OPTION, CTA_OPTION, SYS_OPTION, EXIT_OPTION, ABS_OPTION, TO_OPTION, CA_OPTION, CG_OPTION, CS_OPTION, LU_OPTION, CV_OPTION, WB_OPTION, WT_OPTION]
  131 opcode_spec: OPCODE . $@13 option_list
  132            | OPCODE .  [IDENTIFIER, INT_OPERAND, FLOAT_OPERAND, DOUBLE_OPERAND, LEFT_SQUARE_BRACKET, SPECIAL_REGISTER, MINUS, SEMI_COLON, EXCLAMATION, LEFT_BRACE, LEFT_PAREN]

    IDENTIFIER           reduce using rule 132 (opcode_spec)
    INT_OPERAND          reduce using rule 132 (opcode_spec)
    FLOAT_OPERAND        reduce using rule 132 (opcode_spec)
    DOUBLE_OPERAND       reduce using rule 132 (opcode_spec)
    LEFT_SQUARE_BRACKET  reduce using rule 132 (opcode_spec)
    SPECIAL_REGISTER     reduce using rule 132 (opcode_spec)
    MINUS                reduce using rule 132 (opcode_spec)
    SEMI_COLON           reduce using rule 132 (opcode_spec)
    EXCLAMATION          reduce using rule 132 (opcode_spec)
    LEFT_BRACE           reduce using rule 132 (opcode_spec)
    LEFT_PAREN           reduce using rule 132 (opcode_spec)
    $default             reduce using rule 130 ($@13)

    $@13  go to state 140


State 109

  122 instruction_statement: IDENTIFIER . COLON

    COLON  shift, and go to state 141


State 110

  133 pred_spec: PRED . IDENTIFIER
  134          | PRED . EXCLAMATION IDENTIFIER
  135          | PRED . IDENTIFIER LT_OPTION
  136          | PRED . IDENTIFIER EQ_OPTION
  137          | PRED . IDENTIFIER LE_OPTION
  138          | PRED . IDENTIFIER NE_OPTION
  139          | PRED . IDENTIFIER GE_OPTION
  140          | PRED . IDENTIFIER EQU_OPTION
  141          | PRED . IDENTIFIER GTU_OPTION
  142          | PRED . IDENTIFIER NEU_OPTION
  143          | PRED . IDENTIFIER CF_OPTION
  144          | PRED . IDENTIFIER SF_OPTION
  145          | PRED . IDENTIFIER NSF_OPTION

    IDENTIFIER   shift, and go to state 142
    EXCLAMATION  shift, and go to state 143


State 111

   61 directive_statement: function_decl . SEMI_COLON

    SEMI_COLON  shift, and go to state 73


State 112

   50 statement_list: statement_block .

    $default  reduce using rule 50 (statement_list)


State 113

   17 function_decl: . function_decl_header LEFT_PAREN $@4 param_entry RIGHT_PAREN $@5 function_ident_param
   19              | . function_decl_header $@6 function_ident_param
   20              | . function_decl_header
   25 function_decl_header: . ENTRY_DIRECTIVE
   26                     | . FUNC_DIRECTIVE
   27                     | . VISIBLE_DIRECTIVE FUNC_DIRECTIVE
   28                     | . EXTERN_DIRECTIVE FUNC_DIRECTIVE
   44 statement_block: . LEFT_BRACE statement_list RIGHT_BRACE
   44                | LEFT_BRACE statement_list . RIGHT_BRACE
   47 statement_list: statement_list . directive_statement
   48               | statement_list . instruction_statement
   49               | statement_list . statement_block
   51 directive_statement: . variable_declaration SEMI_COLON
   52                    | . VERSION_DIRECTIVE DOUBLE_OPERAND
   53                    | . VERSION_DIRECTIVE DOUBLE_OPERAND PLUS
   54                    | . ADDRESS_SIZE_DIRECTIVE INT_OPERAND
   55                    | . TARGET_DIRECTIVE IDENTIFIER COMMA IDENTIFIER
   56                    | . TARGET_DIRECTIVE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER
   57                    | . TARGET_DIRECTIVE IDENTIFIER
   58                    | . FILE_DIRECTIVE INT_OPERAND STRING
   59                    | . LOC_DIRECTIVE INT_OPERAND INT_OPERAND INT_OPERAND
   60                    | . PRAGMA_DIRECTIVE STRING SEMI_COLON
   61                    | . function_decl SEMI_COLON
   62 variable_declaration: . variable_spec identifier_list
   63                     | . variable_spec identifier_spec EQUALS initializer_list
   64                     | . variable_spec identifier_spec EQUALS literal_operand
   65                     | . CONSTPTR_DIRECTIVE IDENTIFIER COMMA IDENTIFIER COMMA INT_OPERAND
   66 variable_spec: . var_spec_list
   73 var_spec_list: . var_spec
   74              | . var_spec_list var_spec
   75 var_spec: . space_spec
   76         | . type_spec
   77         | . align_spec
   78         | . EXTERN_DIRECTIVE
   79 align_spec: . ALIGN_DIRECTIVE INT_OPERAND
   80 space_spec: . REG_DIRECTIVE
   81           | . SREG_DIRECTIVE
   82           | . addressable_spec
   83 addressable_spec: . CONST_DIRECTIVE
   84                 | . GLOBAL_DIRECTIVE
   85                 | . LOCAL_DIRECTIVE
   86                 | . PARAM_DIRECTIVE
   87                 | . SHARED_DIRECTIVE
   88                 | . SURF_DIRECTIVE
   89                 | . TEX_DIRECTIVE
   90 type_spec: . scalar_type
   91          | . vector_spec scalar_type
   92 vector_spec: . V2_TYPE
   93            | . V3_TYPE
   94            | . V4_TYPE
   95 scalar_type: . S8_TYPE
   96            | . S16_TYPE
   97            | . S32_TYPE
   98            | . S64_TYPE
   99            | . U8_TYPE
  100            | . U16_TYPE
  101            | . U32_TYPE
  102            | . U64_TYPE
  103            | . F16_TYPE
  104            | . F32_TYPE
  105            | . F64_TYPE
  106            | . FF64_TYPE
  107            | . B8_TYPE
  108            | . B16_TYPE
  109            | . B32_TYPE
  110            | . B64_TYPE
  111            | . BB64_TYPE
  112            | . BB128_TYPE
  113            | . PRED_TYPE
  114            | . TEXREF_TYPE
  115            | . SAMPLERREF_TYPE
  116            | . SURFREF_TYPE
  121 instruction_statement: . instruction SEMI_COLON
  122                      | . IDENTIFIER COLON
  123                      | . pred_spec instruction SEMI_COLON
  125 instruction: . opcode_spec LEFT_PAREN operand RIGHT_PAREN $@12 COMMA operand COMMA LEFT_PAREN operand_list RIGHT_PAREN
  126            | . opcode_spec operand COMMA LEFT_PAREN operand_list RIGHT_PAREN
  127            | . opcode_spec operand COMMA LEFT_PAREN RIGHT_PAREN
  128            | . opcode_spec operand_list
  129            | . opcode_spec
  131 opcode_spec: . OPCODE $@13 option_list
  132            | . OPCODE
  133 pred_spec: . PRED IDENTIFIER
  134          | . PRED EXCLAMATION IDENTIFIER
  135          | . PRED IDENTIFIER LT_OPTION
  136          | . PRED IDENTIFIER EQ_OPTION
  137          | . PRED IDENTIFIER LE_OPTION
  138          | . PRED IDENTIFIER NE_OPTION
  139          | . PRED IDENTIFIER GE_OPTION
  140          | . PRED IDENTIFIER EQU_OPTION
  141          | . PRED IDENTIFIER GTU_OPTION
  142          | . PRED IDENTIFIER NEU_OPTION
  143          | . PRED IDENTIFIER CF_OPTION
  144          | . PRED IDENTIFIER SF_OPTION
  145          | . PRED IDENTIFIER NSF_OPTION

    OPCODE                  shift, and go to state 108
    ALIGN_DIRECTIVE         shift, and go to state 3
    CONST_DIRECTIVE         shift, and go to state 4
    CONSTPTR_DIRECTIVE      shift, and go to state 5
    ENTRY_DIRECTIVE         shift, and go to state 6
    EXTERN_DIRECTIVE        shift, and go to state 7
    FILE_DIRECTIVE          shift, and go to state 8
    FUNC_DIRECTIVE          shift, and go to state 9
    GLOBAL_DIRECTIVE        shift, and go to state 10
    LOCAL_DIRECTIVE         shift, and go to state 11
    LOC_DIRECTIVE           shift, and go to state 12
    PARAM_DIRECTIVE         shift, and go to state 13
    PRAGMA_DIRECTIVE        shift, and go to state 14
    REG_DIRECTIVE           shift, and go to state 15
    SHARED_DIRECTIVE        shift, and go to state 16
    SREG_DIRECTIVE          shift, and go to state 17
    SURF_DIRECTIVE          shift, and go to state 18
    TARGET_DIRECTIVE        shift, and go to state 19
    TEX_DIRECTIVE           shift, and go to state 20
    VERSION_DIRECTIVE       shift, and go to state 21
    ADDRESS_SIZE_DIRECTIVE  shift, and go to state 22
    VISIBLE_DIRECTIVE       shift, and go to state 23
    IDENTIFIER              shift, and go to state 109
    S8_TYPE                 shift, and go to state 24
    S16_TYPE                shift, and go to state 25
    S32_TYPE                shift, and go to state 26
    S64_TYPE                shift, and go to state 27
    U8_TYPE                 shift, and go to state 28
    U16_TYPE                shift, and go to state 29
    U32_TYPE                shift, and go to state 30
    U64_TYPE                shift, and go to state 31
    F16_TYPE                shift, and go to state 32
    F32_TYPE                shift, and go to state 33
    F64_TYPE                shift, and go to state 34
    FF64_TYPE               shift, and go to state 35
    B8_TYPE                 shift, and go to state 36
    B16_TYPE                shift, and go to state 37
    B32_TYPE                shift, and go to state 38
    B64_TYPE                shift, and go to state 39
    BB64_TYPE               shift, and go to state 40
    BB128_TYPE              shift, and go to state 41
    PRED_TYPE               shift, and go to state 42
    TEXREF_TYPE             shift, and go to state 43
    SAMPLERREF_TYPE         shift, and go to state 44
    SURFREF_TYPE            shift, and go to state 45
    V2_TYPE                 shift, and go to state 46
    V3_TYPE                 shift, and go to state 47
    V4_TYPE                 shift, and go to state 48
    PRED                    shift, and go to state 110
    RIGHT_BRACE             shift, and go to state 144
    LEFT_BRACE              shift, and go to state 91

    function_decl          go to state 111
    function_decl_header   go to state 51
    statement_block        go to state 145
    directive_statement    go to state 146
    variable_declaration   go to state 53
    variable_spec          go to state 54
    var_spec_list          go to state 55
    var_spec               go to state 56
    align_spec             go to state 57
    space_spec             go to state 58
    addressable_spec       go to state 59
    type_spec              go to state 60
    vector_spec            go to state 61
    scalar_type            go to state 62
    instruction_statement  go to state 147
    instruction            go to state 116
    opcode_spec            go to state 117
    pred_spec              go to state 118


State 114

   45 statement_list: directive_statement .

    $default  reduce using rule 45 (statement_list)


State 115

   46 statement_list: instruction_statement .

    $default  reduce using rule 46 (statement_list)


State 116

  121 instruction_statement: instruction . SEMI_COLON

    SEMI_COLON  shift, and go to state 148


State 117

  125 instruction: opcode_spec . LEFT_PAREN operand RIGHT_PAREN $@12 COMMA operand COMMA LEFT_PAREN operand_list RIGHT_PAREN
  126            | opcode_spec . operand COMMA LEFT_PAREN operand_list RIGHT_PAREN
  127            | opcode_spec . operand COMMA LEFT_PAREN RIGHT_PAREN
  128            | opcode_spec . operand_list
  129            | opcode_spec .  [SEMI_COLON]
  224 operand_list: . operand
  225             | . operand COMMA operand_list
  226 operand: . IDENTIFIER
  227        | . EXCLAMATION IDENTIFIER
  228        | . MINUS IDENTIFIER
  229        | . memory_operand
  230        | . literal_operand
  231        | . builtin_operand
  232        | . vector_operand
  233        | . MINUS vector_operand
  234        | . tex_operand
  235        | . IDENTIFIER PLUS INT_OPERAND
  236        | . IDENTIFIER LO_OPTION
  237        | . MINUS IDENTIFIER LO_OPTION
  238        | . IDENTIFIER HI_OPTION
  239        | . MINUS IDENTIFIER HI_OPTION
  240        | . IDENTIFIER PIPE IDENTIFIER
  241        | . IDENTIFIER PIPE IDENTIFIER LO_OPTION
  242        | . IDENTIFIER PIPE IDENTIFIER HI_OPTION
  243        | . IDENTIFIER BACKSLASH IDENTIFIER
  244        | . IDENTIFIER BACKSLASH IDENTIFIER LO_OPTION
  245        | . IDENTIFIER BACKSLASH IDENTIFIER HI_OPTION
  246 vector_operand: . LEFT_BRACE IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  247               | . LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  248               | . LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  249               | . LEFT_BRACE IDENTIFIER RIGHT_BRACE
  251 tex_operand: . LEFT_SQUARE_BRACKET IDENTIFIER COMMA $@14 vector_operand RIGHT_SQUARE_BRACKET
  252 builtin_operand: . SPECIAL_REGISTER DIMENSION_MODIFIER
  253                | . SPECIAL_REGISTER
  254 memory_operand: . LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET
  255               | . IDENTIFIER LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET
  256               | . IDENTIFIER LEFT_SQUARE_BRACKET literal_operand RIGHT_SQUARE_BRACKET
  257               | . IDENTIFIER LEFT_SQUARE_BRACKET twin_operand RIGHT_SQUARE_BRACKET
  258               | . MINUS memory_operand
  266 literal_operand: . INT_OPERAND
  267                | . FLOAT_OPERAND
  268                | . DOUBLE_OPERAND

    IDENTIFIER           shift, and go to state 149
    INT_OPERAND          shift, and go to state 132
    FLOAT_OPERAND        shift, and go to state 133
    DOUBLE_OPERAND       shift, and go to state 134
    LEFT_SQUARE_BRACKET  shift, and go to state 150
    SPECIAL_REGISTER     shift, and go to state 151
    MINUS                shift, and go to state 152
    EXCLAMATION          shift, and go to state 153
    LEFT_BRACE           shift, and go to state 154
    LEFT_PAREN           shift, and go to state 155

    $default  reduce using rule 129 (instruction)

    operand_list     go to state 156
    operand          go to state 157
    vector_operand   go to state 158
    tex_operand      go to state 159
    builtin_operand  go to state 160
    memory_operand   go to state 161
    literal_operand  go to state 162


State 118

  123 instruction_statement: pred_spec . instruction SEMI_COLON
  125 instruction: . opcode_spec LEFT_PAREN operand RIGHT_PAREN $@12 COMMA operand COMMA LEFT_PAREN operand_list RIGHT_PAREN
  126            | . opcode_spec operand COMMA LEFT_PAREN operand_list RIGHT_PAREN
  127            | . opcode_spec operand COMMA LEFT_PAREN RIGHT_PAREN
  128            | . opcode_spec operand_list
  129            | . opcode_spec
  131 opcode_spec: . OPCODE $@13 option_list
  132            | . OPCODE

    OPCODE  shift, and go to state 108

    instruction  go to state 163
    opcode_spec  go to state 117


State 119

   12 block_spec: MAXNCTAPERSM_DIRECTIVE INT_OPERAND .

    $default  reduce using rule 12 (block_spec)


State 120

   10 block_spec: MAXNTID_DIRECTIVE INT_OPERAND . COMMA INT_OPERAND COMMA INT_OPERAND

    COMMA  shift, and go to state 164


State 121

   11 block_spec: MINNCTAPERSM_DIRECTIVE INT_OPERAND .

    $default  reduce using rule 11 (block_spec)


State 122

    9 function_defn: function_decl $@2 block_spec_list $@3 . statement_block
   44 statement_block: . LEFT_BRACE statement_list RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 91

    statement_block  go to state 165


State 123

   14 block_spec_list: block_spec_list block_spec .

    $default  reduce using rule 14 (block_spec_list)


State 124

   33 $@10: . %empty
   34 param_entry: PARAM_DIRECTIVE . $@10 variable_spec ptr_spec identifier_spec

    $default  reduce using rule 33 ($@10)

    $@10  go to state 166


State 125

   35 $@11: . %empty
   36 param_entry: REG_DIRECTIVE . $@11 variable_spec identifier_spec

    $default  reduce using rule 35 ($@11)

    $@11  go to state 167


State 126

   17 function_decl: function_decl_header LEFT_PAREN $@4 param_entry . RIGHT_PAREN $@5 function_ident_param

    RIGHT_PAREN  shift, and go to state 168


State 127

   23 function_ident_param: IDENTIFIER $@7 . LEFT_PAREN $@8 param_list RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 169


State 128

   72 identifier_spec: IDENTIFIER LEFT_SQUARE_BRACKET INT_OPERAND . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 170


State 129

   71 identifier_spec: IDENTIFIER LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 71 (identifier_spec)


State 130

   70 identifier_spec: IDENTIFIER LEFT_ANGLE_BRACKET INT_OPERAND . RIGHT_ANGLE_BRACKET

    RIGHT_ANGLE_BRACKET  shift, and go to state 171


State 131

   68 identifier_list: identifier_list COMMA identifier_spec .

    $default  reduce using rule 68 (identifier_list)


State 132

  266 literal_operand: INT_OPERAND .

    $default  reduce using rule 266 (literal_operand)


State 133

  267 literal_operand: FLOAT_OPERAND .

    $default  reduce using rule 267 (literal_operand)


State 134

  268 literal_operand: DOUBLE_OPERAND .

    $default  reduce using rule 268 (literal_operand)


State 135

  117 initializer_list: . LEFT_BRACE literal_list RIGHT_BRACE
  117                 | LEFT_BRACE . literal_list RIGHT_BRACE
  118                 | . LEFT_BRACE initializer_list RIGHT_BRACE
  118                 | LEFT_BRACE . initializer_list RIGHT_BRACE
  119 literal_list: . literal_operand
  120             | . literal_list COMMA literal_operand
  266 literal_operand: . INT_OPERAND
  267                | . FLOAT_OPERAND
  268                | . DOUBLE_OPERAND

    INT_OPERAND     shift, and go to state 132
    FLOAT_OPERAND   shift, and go to state 133
    DOUBLE_OPERAND  shift, and go to state 134
    LEFT_BRACE      shift, and go to state 135

    initializer_list  go to state 172
    literal_list      go to state 173
    literal_operand   go to state 174


State 136

   63 variable_declaration: variable_spec identifier_spec EQUALS initializer_list .

    $default  reduce using rule 63 (variable_declaration)


State 137

   64 variable_declaration: variable_spec identifier_spec EQUALS literal_operand .

    $default  reduce using rule 64 (variable_declaration)


State 138

   65 variable_declaration: CONSTPTR_DIRECTIVE IDENTIFIER COMMA IDENTIFIER COMMA . INT_OPERAND

    INT_OPERAND  shift, and go to state 175


State 139

   56 directive_statement: TARGET_DIRECTIVE IDENTIFIER COMMA IDENTIFIER COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 176


State 140

   83 addressable_spec: . CONST_DIRECTIVE
   84                 | . GLOBAL_DIRECTIVE
   85                 | . LOCAL_DIRECTIVE
   86                 | . PARAM_DIRECTIVE
   87                 | . SHARED_DIRECTIVE
   88                 | . SURF_DIRECTIVE
   89                 | . TEX_DIRECTIVE
   90 type_spec: . scalar_type
   91          | . vector_spec scalar_type
   92 vector_spec: . V2_TYPE
   93            | . V3_TYPE
   94            | . V4_TYPE
   95 scalar_type: . S8_TYPE
   96            | . S16_TYPE
   97            | . S32_TYPE
   98            | . S64_TYPE
   99            | . U8_TYPE
  100            | . U16_TYPE
  101            | . U32_TYPE
  102            | . U64_TYPE
  103            | . F16_TYPE
  104            | . F32_TYPE
  105            | . F64_TYPE
  106            | . FF64_TYPE
  107            | . B8_TYPE
  108            | . B16_TYPE
  109            | . B32_TYPE
  110            | . B64_TYPE
  111            | . BB64_TYPE
  112            | . BB128_TYPE
  113            | . PRED_TYPE
  114            | . TEXREF_TYPE
  115            | . SAMPLERREF_TYPE
  116            | . SURFREF_TYPE
  131 opcode_spec: OPCODE $@13 . option_list
  146 option_list: . option
  147            | . option option_list
  148 option: . type_spec
  149       | . compare_spec
  150       | . addressable_spec
  151       | . rounding_mode
  152       | . SYNC_OPTION
  153       | . ARRIVE_OPTION
  154       | . RED_OPTION
  155       | . POPC_REDUCTION
  156       | . AND_REDUCTION
  157       | . OR_REDUCTION
  158       | . UNI_OPTION
  159       | . WIDE_OPTION
  160       | . ANY_OPTION
  161       | . ALL_OPTION
  162       | . BALLOT_OPTION
  163       | . GLOBAL_OPTION
  164       | . CTA_OPTION
  165       | . SYS_OPTION
  166       | . GEOM_MODIFIER_1D
  167       | . GEOM_MODIFIER_2D
  168       | . GEOM_MODIFIER_3D
  169       | . SAT_OPTION
  170       | . FTZ_OPTION
  171       | . NEG_OPTION
  172       | . APPROX_OPTION
  173       | . FULL_OPTION
  174       | . EXIT_OPTION
  175       | . ABS_OPTION
  176       | . atomic_operation_spec
  177       | . TO_OPTION
  178       | . HALF_OPTION
  179       | . CA_OPTION
  180       | . CG_OPTION
  181       | . CS_OPTION
  182       | . LU_OPTION
  183       | . CV_OPTION
  184       | . WB_OPTION
  185       | . WT_OPTION
  186 atomic_operation_spec: . ATOMIC_AND
  187                      | . ATOMIC_OR
  188                      | . ATOMIC_XOR
  189                      | . ATOMIC_CAS
  190                      | . ATOMIC_EXCH
  191                      | . ATOMIC_ADD
  192                      | . ATOMIC_INC
  193                      | . ATOMIC_DEC
  194                      | . ATOMIC_MIN
  195                      | . ATOMIC_MAX
  196 rounding_mode: . floating_point_rounding_mode
  197              | . integer_rounding_mode
  198 floating_point_rounding_mode: . RN_OPTION
  199                             | . RZ_OPTION
  200                             | . RM_OPTION
  201                             | . RP_OPTION
  202 integer_rounding_mode: . RNI_OPTION
  203                      | . RZI_OPTION
  204                      | . RMI_OPTION
  205                      | . RPI_OPTION
  206 compare_spec: . EQ_OPTION
  207             | . NE_OPTION
  208             | . LT_OPTION
  209             | . LE_OPTION
  210             | . GT_OPTION
  211             | . GE_OPTION
  212             | . LO_OPTION
  213             | . LS_OPTION
  214             | . HI_OPTION
  215             | . HS_OPTION
  216             | . EQU_OPTION
  217             | . NEU_OPTION
  218             | . LTU_OPTION
  219             | . LEU_OPTION
  220             | . GTU_OPTION
  221             | . GEU_OPTION
  222             | . NUM_OPTION
  223             | . NAN_OPTION

    CONST_DIRECTIVE   shift, and go to state 4
    GLOBAL_DIRECTIVE  shift, and go to state 10
    LOCAL_DIRECTIVE   shift, and go to state 11
    PARAM_DIRECTIVE   shift, and go to state 13
    SHARED_DIRECTIVE  shift, and go to state 16
    SURF_DIRECTIVE    shift, and go to state 18
    TEX_DIRECTIVE     shift, and go to state 20
    S8_TYPE           shift, and go to state 24
    S16_TYPE          shift, and go to state 25
    S32_TYPE          shift, and go to state 26
    S64_TYPE          shift, and go to state 27
    U8_TYPE           shift, and go to state 28
    U16_TYPE          shift, and go to state 29
    U32_TYPE          shift, and go to state 30
    U64_TYPE          shift, and go to state 31
    F16_TYPE          shift, and go to state 32
    F32_TYPE          shift, and go to state 33
    F64_TYPE          shift, and go to state 34
    FF64_TYPE         shift, and go to state 35
    B8_TYPE           shift, and go to state 36
    B16_TYPE          shift, and go to state 37
    B32_TYPE          shift, and go to state 38
    B64_TYPE          shift, and go to state 39
    BB64_TYPE         shift, and go to state 40
    BB128_TYPE        shift, and go to state 41
    PRED_TYPE         shift, and go to state 42
    TEXREF_TYPE       shift, and go to state 43
    SAMPLERREF_TYPE   shift, and go to state 44
    SURFREF_TYPE      shift, and go to state 45
    V2_TYPE           shift, and go to state 46
    V3_TYPE           shift, and go to state 47
    V4_TYPE           shift, and go to state 48
    HALF_OPTION       shift, and go to state 177
    EQ_OPTION         shift, and go to state 178
    NE_OPTION         shift, and go to state 179
    LT_OPTION         shift, and go to state 180
    LE_OPTION         shift, and go to state 181
    GT_OPTION         shift, and go to state 182
    GE_OPTION         shift, and go to state 183
    LO_OPTION         shift, and go to state 184
    LS_OPTION         shift, and go to state 185
    HI_OPTION         shift, and go to state 186
    HS_OPTION         shift, and go to state 187
    EQU_OPTION        shift, and go to state 188
    NEU_OPTION        shift, and go to state 189
    LTU_OPTION        shift, and go to state 190
    LEU_OPTION        shift, and go to state 191
    GTU_OPTION        shift, and go to state 192
    GEU_OPTION        shift, and go to state 193
    NUM_OPTION        shift, and go to state 194
    NAN_OPTION        shift, and go to state 195
    WIDE_OPTION       shift, and go to state 196
    RN_OPTION         shift, and go to state 197
    RZ_OPTION         shift, and go to state 198
    RM_OPTION         shift, and go to state 199
    RP_OPTION         shift, and go to state 200
    RNI_OPTION        shift, and go to state 201
    RZI_OPTION        shift, and go to state 202
    RMI_OPTION        shift, and go to state 203
    RPI_OPTION        shift, and go to state 204
    UNI_OPTION        shift, and go to state 205
    GEOM_MODIFIER_1D  shift, and go to state 206
    GEOM_MODIFIER_2D  shift, and go to state 207
    GEOM_MODIFIER_3D  shift, and go to state 208
    SAT_OPTION        shift, and go to state 209
    FTZ_OPTION        shift, and go to state 210
    NEG_OPTION        shift, and go to state 211
    SYNC_OPTION       shift, and go to state 212
    RED_OPTION        shift, and go to state 213
    POPC_REDUCTION    shift, and go to state 214
    AND_REDUCTION     shift, and go to state 215
    OR_REDUCTION      shift, and go to state 216
    ARRIVE_OPTION     shift, and go to state 217
    ATOMIC_AND        shift, and go to state 218
    ATOMIC_OR         shift, and go to state 219
    ATOMIC_XOR        shift, and go to state 220
    ATOMIC_CAS        shift, and go to state 221
    ATOMIC_EXCH       shift, and go to state 222
    ATOMIC_ADD        shift, and go to state 223
    ATOMIC_INC        shift, and go to state 224
    ATOMIC_DEC        shift, and go to state 225
    ATOMIC_MIN        shift, and go to state 226
    ATOMIC_MAX        shift, and go to state 227
    APPROX_OPTION     shift, and go to state 228
    FULL_OPTION       shift, and go to state 229
    ANY_OPTION        shift, and go to state 230
    ALL_OPTION        shift, and go to state 231
    BALLOT_OPTION     shift, and go to state 232
    GLOBAL_OPTION     shift, and go to state 233
    CTA_OPTION        shift, and go to state 234
    SYS_OPTION        shift, and go to state 235
    EXIT_OPTION       shift, and go to state 236
    ABS_OPTION        shift, and go to state 237
    TO_OPTION         shift, and go to state 238
    CA_OPTION         shift, and go to state 239
    CG_OPTION         shift, and go to state 240
    CS_OPTION         shift, and go to state 241
    LU_OPTION         shift, and go to state 242
    CV_OPTION         shift, and go to state 243
    WB_OPTION         shift, and go to state 244
    WT_OPTION         shift, and go to state 245

    addressable_spec              go to state 246
    type_spec                     go to state 247
    vector_spec                   go to state 61
    scalar_type                   go to state 62
    option_list                   go to state 248
    option                        go to state 249
    atomic_operation_spec         go to state 250
    rounding_mode                 go to state 251
    floating_point_rounding_mode  go to state 252
    integer_rounding_mode         go to state 253
    compare_spec                  go to state 254


State 141

  122 instruction_statement: IDENTIFIER COLON .

    $default  reduce using rule 122 (instruction_statement)


State 142

  133 pred_spec: PRED IDENTIFIER .  [OPCODE]
  135          | PRED IDENTIFIER . LT_OPTION
  136          | PRED IDENTIFIER . EQ_OPTION
  137          | PRED IDENTIFIER . LE_OPTION
  138          | PRED IDENTIFIER . NE_OPTION
  139          | PRED IDENTIFIER . GE_OPTION
  140          | PRED IDENTIFIER . EQU_OPTION
  141          | PRED IDENTIFIER . GTU_OPTION
  142          | PRED IDENTIFIER . NEU_OPTION
  143          | PRED IDENTIFIER . CF_OPTION
  144          | PRED IDENTIFIER . SF_OPTION
  145          | PRED IDENTIFIER . NSF_OPTION

    EQ_OPTION   shift, and go to state 255
    NE_OPTION   shift, and go to state 256
    LT_OPTION   shift, and go to state 257
    LE_OPTION   shift, and go to state 258
    GE_OPTION   shift, and go to state 259
    EQU_OPTION  shift, and go to state 260
    NEU_OPTION  shift, and go to state 261
    GTU_OPTION  shift, and go to state 262
    CF_OPTION   shift, and go to state 263
    SF_OPTION   shift, and go to state 264
    NSF_OPTION  shift, and go to state 265

    $default  reduce using rule 133 (pred_spec)


State 143

  134 pred_spec: PRED EXCLAMATION . IDENTIFIER

    IDENTIFIER  shift, and go to state 266


State 144

   44 statement_block: LEFT_BRACE statement_list RIGHT_BRACE .

    $default  reduce using rule 44 (statement_block)


State 145

   49 statement_list: statement_list statement_block .

    $default  reduce using rule 49 (statement_list)


State 146

   47 statement_list: statement_list directive_statement .

    $default  reduce using rule 47 (statement_list)


State 147

   48 statement_list: statement_list instruction_statement .

    $default  reduce using rule 48 (statement_list)


State 148

  121 instruction_statement: instruction SEMI_COLON .

    $default  reduce using rule 121 (instruction_statement)


State 149

  226 operand: IDENTIFIER .  [COMMA, SEMI_COLON, RIGHT_PAREN]
  235        | IDENTIFIER . PLUS INT_OPERAND
  236        | IDENTIFIER . LO_OPTION
  238        | IDENTIFIER . HI_OPTION
  240        | IDENTIFIER . PIPE IDENTIFIER
  241        | IDENTIFIER . PIPE IDENTIFIER LO_OPTION
  242        | IDENTIFIER . PIPE IDENTIFIER HI_OPTION
  243        | IDENTIFIER . BACKSLASH IDENTIFIER
  244        | IDENTIFIER . BACKSLASH IDENTIFIER LO_OPTION
  245        | IDENTIFIER . BACKSLASH IDENTIFIER HI_OPTION
  255 memory_operand: IDENTIFIER . LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET
  256               | IDENTIFIER . LEFT_SQUARE_BRACKET literal_operand RIGHT_SQUARE_BRACKET
  257               | IDENTIFIER . LEFT_SQUARE_BRACKET twin_operand RIGHT_SQUARE_BRACKET

    LO_OPTION            shift, and go to state 267
    HI_OPTION            shift, and go to state 268
    LEFT_SQUARE_BRACKET  shift, and go to state 269
    PLUS                 shift, and go to state 270
    PIPE                 shift, and go to state 271
    BACKSLASH            shift, and go to state 272

    $default  reduce using rule 226 (operand)


State 150

  251 tex_operand: LEFT_SQUARE_BRACKET . IDENTIFIER COMMA $@14 vector_operand RIGHT_SQUARE_BRACKET
  254 memory_operand: LEFT_SQUARE_BRACKET . address_expression RIGHT_SQUARE_BRACKET
  269 address_expression: . IDENTIFIER
  270                   | . IDENTIFIER LO_OPTION
  271                   | . IDENTIFIER HI_OPTION
  272                   | . IDENTIFIER PLUS INT_OPERAND
  273                   | . INT_OPERAND

    IDENTIFIER   shift, and go to state 273
    INT_OPERAND  shift, and go to state 274

    address_expression  go to state 275


State 151

  252 builtin_operand: SPECIAL_REGISTER . DIMENSION_MODIFIER
  253                | SPECIAL_REGISTER .  [COMMA, SEMI_COLON, RIGHT_PAREN]

    DIMENSION_MODIFIER  shift, and go to state 276

    $default  reduce using rule 253 (builtin_operand)


State 152

  228 operand: MINUS . IDENTIFIER
  233        | MINUS . vector_operand
  237        | MINUS . IDENTIFIER LO_OPTION
  239        | MINUS . IDENTIFIER HI_OPTION
  246 vector_operand: . LEFT_BRACE IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  247               | . LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  248               | . LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  249               | . LEFT_BRACE IDENTIFIER RIGHT_BRACE
  254 memory_operand: . LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET
  255               | . IDENTIFIER LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET
  256               | . IDENTIFIER LEFT_SQUARE_BRACKET literal_operand RIGHT_SQUARE_BRACKET
  257               | . IDENTIFIER LEFT_SQUARE_BRACKET twin_operand RIGHT_SQUARE_BRACKET
  258               | . MINUS memory_operand
  258               | MINUS . memory_operand

    IDENTIFIER           shift, and go to state 277
    LEFT_SQUARE_BRACKET  shift, and go to state 278
    MINUS                shift, and go to state 279
    LEFT_BRACE           shift, and go to state 154

    vector_operand  go to state 280
    memory_operand  go to state 281


State 153

  227 operand: EXCLAMATION . IDENTIFIER

    IDENTIFIER  shift, and go to state 282


State 154

  246 vector_operand: LEFT_BRACE . IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  247               | LEFT_BRACE . IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  248               | LEFT_BRACE . IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  249               | LEFT_BRACE . IDENTIFIER RIGHT_BRACE

    IDENTIFIER  shift, and go to state 283


State 155

  125 instruction: opcode_spec LEFT_PAREN . operand RIGHT_PAREN $@12 COMMA operand COMMA LEFT_PAREN operand_list RIGHT_PAREN
  226 operand: . IDENTIFIER
  227        | . EXCLAMATION IDENTIFIER
  228        | . MINUS IDENTIFIER
  229        | . memory_operand
  230        | . literal_operand
  231        | . builtin_operand
  232        | . vector_operand
  233        | . MINUS vector_operand
  234        | . tex_operand
  235        | . IDENTIFIER PLUS INT_OPERAND
  236        | . IDENTIFIER LO_OPTION
  237        | . MINUS IDENTIFIER LO_OPTION
  238        | . IDENTIFIER HI_OPTION
  239        | . MINUS IDENTIFIER HI_OPTION
  240        | . IDENTIFIER PIPE IDENTIFIER
  241        | . IDENTIFIER PIPE IDENTIFIER LO_OPTION
  242        | . IDENTIFIER PIPE IDENTIFIER HI_OPTION
  243        | . IDENTIFIER BACKSLASH IDENTIFIER
  244        | . IDENTIFIER BACKSLASH IDENTIFIER LO_OPTION
  245        | . IDENTIFIER BACKSLASH IDENTIFIER HI_OPTION
  246 vector_operand: . LEFT_BRACE IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  247               | . LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  248               | . LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  249               | . LEFT_BRACE IDENTIFIER RIGHT_BRACE
  251 tex_operand: . LEFT_SQUARE_BRACKET IDENTIFIER COMMA $@14 vector_operand RIGHT_SQUARE_BRACKET
  252 builtin_operand: . SPECIAL_REGISTER DIMENSION_MODIFIER
  253                | . SPECIAL_REGISTER
  254 memory_operand: . LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET
  255               | . IDENTIFIER LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET
  256               | . IDENTIFIER LEFT_SQUARE_BRACKET literal_operand RIGHT_SQUARE_BRACKET
  257               | . IDENTIFIER LEFT_SQUARE_BRACKET twin_operand RIGHT_SQUARE_BRACKET
  258               | . MINUS memory_operand
  266 literal_operand: . INT_OPERAND
  267                | . FLOAT_OPERAND
  268                | . DOUBLE_OPERAND

    IDENTIFIER           shift, and go to state 149
    INT_OPERAND          shift, and go to state 132
    FLOAT_OPERAND        shift, and go to state 133
    DOUBLE_OPERAND       shift, and go to state 134
    LEFT_SQUARE_BRACKET  shift, and go to state 150
    SPECIAL_REGISTER     shift, and go to state 151
    MINUS                shift, and go to state 152
    EXCLAMATION          shift, and go to state 153
    LEFT_BRACE           shift, and go to state 154

    operand          go to state 284
    vector_operand   go to state 158
    tex_operand      go to state 159
    builtin_operand  go to state 160
    memory_operand   go to state 161
    literal_operand  go to state 162


State 156

  128 instruction: opcode_spec operand_list .

    $default  reduce using rule 128 (instruction)


State 157

  126 instruction: opcode_spec operand . COMMA LEFT_PAREN operand_list RIGHT_PAREN
  127            | opcode_spec operand . COMMA LEFT_PAREN RIGHT_PAREN
  224 operand_list: operand .  [SEMI_COLON]
  225             | operand . COMMA operand_list

    COMMA  shift, and go to state 285

    $default  reduce using rule 224 (operand_list)


State 158

  232 operand: vector_operand .

    $default  reduce using rule 232 (operand)


State 159

  234 operand: tex_operand .

    $default  reduce using rule 234 (operand)


State 160

  231 operand: builtin_operand .

    $default  reduce using rule 231 (operand)


State 161

  229 operand: memory_operand .

    $default  reduce using rule 229 (operand)


State 162

  230 operand: literal_operand .

    $default  reduce using rule 230 (operand)


State 163

  123 instruction_statement: pred_spec instruction . SEMI_COLON

    SEMI_COLON  shift, and go to state 286


State 164

   10 block_spec: MAXNTID_DIRECTIVE INT_OPERAND COMMA . INT_OPERAND COMMA INT_OPERAND

    INT_OPERAND  shift, and go to state 287


State 165

    9 function_defn: function_decl $@2 block_spec_list $@3 statement_block .

    $default  reduce using rule 9 (function_defn)


State 166

   34 param_entry: PARAM_DIRECTIVE $@10 . variable_spec ptr_spec identifier_spec
   66 variable_spec: . var_spec_list
   73 var_spec_list: . var_spec
   74              | . var_spec_list var_spec
   75 var_spec: . space_spec
   76         | . type_spec
   77         | . align_spec
   78         | . EXTERN_DIRECTIVE
   79 align_spec: . ALIGN_DIRECTIVE INT_OPERAND
   80 space_spec: . REG_DIRECTIVE
   81           | . SREG_DIRECTIVE
   82           | . addressable_spec
   83 addressable_spec: . CONST_DIRECTIVE
   84                 | . GLOBAL_DIRECTIVE
   85                 | . LOCAL_DIRECTIVE
   86                 | . PARAM_DIRECTIVE
   87                 | . SHARED_DIRECTIVE
   88                 | . SURF_DIRECTIVE
   89                 | . TEX_DIRECTIVE
   90 type_spec: . scalar_type
   91          | . vector_spec scalar_type
   92 vector_spec: . V2_TYPE
   93            | . V3_TYPE
   94            | . V4_TYPE
   95 scalar_type: . S8_TYPE
   96            | . S16_TYPE
   97            | . S32_TYPE
   98            | . S64_TYPE
   99            | . U8_TYPE
  100            | . U16_TYPE
  101            | . U32_TYPE
  102            | . U64_TYPE
  103            | . F16_TYPE
  104            | . F32_TYPE
  105            | . F64_TYPE
  106            | . FF64_TYPE
  107            | . B8_TYPE
  108            | . B16_TYPE
  109            | . B32_TYPE
  110            | . B64_TYPE
  111            | . BB64_TYPE
  112            | . BB128_TYPE
  113            | . PRED_TYPE
  114            | . TEXREF_TYPE
  115            | . SAMPLERREF_TYPE
  116            | . SURFREF_TYPE

    ALIGN_DIRECTIVE   shift, and go to state 3
    CONST_DIRECTIVE   shift, and go to state 4
    EXTERN_DIRECTIVE  shift, and go to state 82
    GLOBAL_DIRECTIVE  shift, and go to state 10
    LOCAL_DIRECTIVE   shift, and go to state 11
    PARAM_DIRECTIVE   shift, and go to state 13
    REG_DIRECTIVE     shift, and go to state 15
    SHARED_DIRECTIVE  shift, and go to state 16
    SREG_DIRECTIVE    shift, and go to state 17
    SURF_DIRECTIVE    shift, and go to state 18
    TEX_DIRECTIVE     shift, and go to state 20
    S8_TYPE           shift, and go to state 24
    S16_TYPE          shift, and go to state 25
    S32_TYPE          shift, and go to state 26
    S64_TYPE          shift, and go to state 27
    U8_TYPE           shift, and go to state 28
    U16_TYPE          shift, and go to state 29
    U32_TYPE          shift, and go to state 30
    U64_TYPE          shift, and go to state 31
    F16_TYPE          shift, and go to state 32
    F32_TYPE          shift, and go to state 33
    F64_TYPE          shift, and go to state 34
    FF64_TYPE         shift, and go to state 35
    B8_TYPE           shift, and go to state 36
    B16_TYPE          shift, and go to state 37
    B32_TYPE          shift, and go to state 38
    B64_TYPE          shift, and go to state 39
    BB64_TYPE         shift, and go to state 40
    BB128_TYPE        shift, and go to state 41
    PRED_TYPE         shift, and go to state 42
    TEXREF_TYPE       shift, and go to state 43
    SAMPLERREF_TYPE   shift, and go to state 44
    SURFREF_TYPE      shift, and go to state 45
    V2_TYPE           shift, and go to state 46
    V3_TYPE           shift, and go to state 47
    V4_TYPE           shift, and go to state 48

    variable_spec     go to state 288
    var_spec_list     go to state 55
    var_spec          go to state 56
    align_spec        go to state 57
    space_spec        go to state 58
    addressable_spec  go to state 59
    type_spec         go to state 60
    vector_spec       go to state 61
    scalar_type       go to state 62


State 167

   36 param_entry: REG_DIRECTIVE $@11 . variable_spec identifier_spec
   66 variable_spec: . var_spec_list
   73 var_spec_list: . var_spec
   74              | . var_spec_list var_spec
   75 var_spec: . space_spec
   76         | . type_spec
   77         | . align_spec
   78         | . EXTERN_DIRECTIVE
   79 align_spec: . ALIGN_DIRECTIVE INT_OPERAND
   80 space_spec: . REG_DIRECTIVE
   81           | . SREG_DIRECTIVE
   82           | . addressable_spec
   83 addressable_spec: . CONST_DIRECTIVE
   84                 | . GLOBAL_DIRECTIVE
   85                 | . LOCAL_DIRECTIVE
   86                 | . PARAM_DIRECTIVE
   87                 | . SHARED_DIRECTIVE
   88                 | . SURF_DIRECTIVE
   89                 | . TEX_DIRECTIVE
   90 type_spec: . scalar_type
   91          | . vector_spec scalar_type
   92 vector_spec: . V2_TYPE
   93            | . V3_TYPE
   94            | . V4_TYPE
   95 scalar_type: . S8_TYPE
   96            | . S16_TYPE
   97            | . S32_TYPE
   98            | . S64_TYPE
   99            | . U8_TYPE
  100            | . U16_TYPE
  101            | . U32_TYPE
  102            | . U64_TYPE
  103            | . F16_TYPE
  104            | . F32_TYPE
  105            | . F64_TYPE
  106            | . FF64_TYPE
  107            | . B8_TYPE
  108            | . B16_TYPE
  109            | . B32_TYPE
  110            | . B64_TYPE
  111            | . BB64_TYPE
  112            | . BB128_TYPE
  113            | . PRED_TYPE
  114            | . TEXREF_TYPE
  115            | . SAMPLERREF_TYPE
  116            | . SURFREF_TYPE

    ALIGN_DIRECTIVE   shift, and go to state 3
    CONST_DIRECTIVE   shift, and go to state 4
    EXTERN_DIRECTIVE  shift, and go to state 82
    GLOBAL_DIRECTIVE  shift, and go to state 10
    LOCAL_DIRECTIVE   shift, and go to state 11
    PARAM_DIRECTIVE   shift, and go to state 13
    REG_DIRECTIVE     shift, and go to state 15
    SHARED_DIRECTIVE  shift, and go to state 16
    SREG_DIRECTIVE    shift, and go to state 17
    SURF_DIRECTIVE    shift, and go to state 18
    TEX_DIRECTIVE     shift, and go to state 20
    S8_TYPE           shift, and go to state 24
    S16_TYPE          shift, and go to state 25
    S32_TYPE          shift, and go to state 26
    S64_TYPE          shift, and go to state 27
    U8_TYPE           shift, and go to state 28
    U16_TYPE          shift, and go to state 29
    U32_TYPE          shift, and go to state 30
    U64_TYPE          shift, and go to state 31
    F16_TYPE          shift, and go to state 32
    F32_TYPE          shift, and go to state 33
    F64_TYPE          shift, and go to state 34
    FF64_TYPE         shift, and go to state 35
    B8_TYPE           shift, and go to state 36
    B16_TYPE          shift, and go to state 37
    B32_TYPE          shift, and go to state 38
    B64_TYPE          shift, and go to state 39
    BB64_TYPE         shift, and go to state 40
    BB128_TYPE        shift, and go to state 41
    PRED_TYPE         shift, and go to state 42
    TEXREF_TYPE       shift, and go to state 43
    SAMPLERREF_TYPE   shift, and go to state 44
    SURFREF_TYPE      shift, and go to state 45
    V2_TYPE           shift, and go to state 46
    V3_TYPE           shift, and go to state 47
    V4_TYPE           shift, and go to state 48

    variable_spec     go to state 289
    var_spec_list     go to state 55
    var_spec          go to state 56
    align_spec        go to state 57
    space_spec        go to state 58
    addressable_spec  go to state 59
    type_spec         go to state 60
    vector_spec       go to state 61
    scalar_type       go to state 62


State 168

   16 $@5: . %empty
   17 function_decl: function_decl_header LEFT_PAREN $@4 param_entry RIGHT_PAREN . $@5 function_ident_param

    $default  reduce using rule 16 ($@5)

    $@5  go to state 290


State 169

   22 $@8: . %empty
   23 function_ident_param: IDENTIFIER $@7 LEFT_PAREN . $@8 param_list RIGHT_PAREN

    $default  reduce using rule 22 ($@8)

    $@8  go to state 291


State 170

   72 identifier_spec: IDENTIFIER LEFT_SQUARE_BRACKET INT_OPERAND RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 72 (identifier_spec)


State 171

   70 identifier_spec: IDENTIFIER LEFT_ANGLE_BRACKET INT_OPERAND RIGHT_ANGLE_BRACKET .

    $default  reduce using rule 70 (identifier_spec)


State 172

  118 initializer_list: LEFT_BRACE initializer_list . RIGHT_BRACE

    RIGHT_BRACE  shift, and go to state 292


State 173

  117 initializer_list: LEFT_BRACE literal_list . RIGHT_BRACE
  120 literal_list: literal_list . COMMA literal_operand

    COMMA        shift, and go to state 293
    RIGHT_BRACE  shift, and go to state 294


State 174

  119 literal_list: literal_operand .

    $default  reduce using rule 119 (literal_list)


State 175

   65 variable_declaration: CONSTPTR_DIRECTIVE IDENTIFIER COMMA IDENTIFIER COMMA INT_OPERAND .

    $default  reduce using rule 65 (variable_declaration)


State 176

   56 directive_statement: TARGET_DIRECTIVE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER .

    $default  reduce using rule 56 (directive_statement)


State 177

  178 option: HALF_OPTION .

    $default  reduce using rule 178 (option)


State 178

  206 compare_spec: EQ_OPTION .

    $default  reduce using rule 206 (compare_spec)


State 179

  207 compare_spec: NE_OPTION .

    $default  reduce using rule 207 (compare_spec)


State 180

  208 compare_spec: LT_OPTION .

    $default  reduce using rule 208 (compare_spec)


State 181

  209 compare_spec: LE_OPTION .

    $default  reduce using rule 209 (compare_spec)


State 182

  210 compare_spec: GT_OPTION .

    $default  reduce using rule 210 (compare_spec)


State 183

  211 compare_spec: GE_OPTION .

    $default  reduce using rule 211 (compare_spec)


State 184

  212 compare_spec: LO_OPTION .

    $default  reduce using rule 212 (compare_spec)


State 185

  213 compare_spec: LS_OPTION .

    $default  reduce using rule 213 (compare_spec)


State 186

  214 compare_spec: HI_OPTION .

    $default  reduce using rule 214 (compare_spec)


State 187

  215 compare_spec: HS_OPTION .

    $default  reduce using rule 215 (compare_spec)


State 188

  216 compare_spec: EQU_OPTION .

    $default  reduce using rule 216 (compare_spec)


State 189

  217 compare_spec: NEU_OPTION .

    $default  reduce using rule 217 (compare_spec)


State 190

  218 compare_spec: LTU_OPTION .

    $default  reduce using rule 218 (compare_spec)


State 191

  219 compare_spec: LEU_OPTION .

    $default  reduce using rule 219 (compare_spec)


State 192

  220 compare_spec: GTU_OPTION .

    $default  reduce using rule 220 (compare_spec)


State 193

  221 compare_spec: GEU_OPTION .

    $default  reduce using rule 221 (compare_spec)


State 194

  222 compare_spec: NUM_OPTION .

    $default  reduce using rule 222 (compare_spec)


State 195

  223 compare_spec: NAN_OPTION .

    $default  reduce using rule 223 (compare_spec)


State 196

  159 option: WIDE_OPTION .

    $default  reduce using rule 159 (option)


State 197

  198 floating_point_rounding_mode: RN_OPTION .

    $default  reduce using rule 198 (floating_point_rounding_mode)


State 198

  199 floating_point_rounding_mode: RZ_OPTION .

    $default  reduce using rule 199 (floating_point_rounding_mode)


State 199

  200 floating_point_rounding_mode: RM_OPTION .

    $default  reduce using rule 200 (floating_point_rounding_mode)


State 200

  201 floating_point_rounding_mode: RP_OPTION .

    $default  reduce using rule 201 (floating_point_rounding_mode)


State 201

  202 integer_rounding_mode: RNI_OPTION .

    $default  reduce using rule 202 (integer_rounding_mode)


State 202

  203 integer_rounding_mode: RZI_OPTION .

    $default  reduce using rule 203 (integer_rounding_mode)


State 203

  204 integer_rounding_mode: RMI_OPTION .

    $default  reduce using rule 204 (integer_rounding_mode)


State 204

  205 integer_rounding_mode: RPI_OPTION .

    $default  reduce using rule 205 (integer_rounding_mode)


State 205

  158 option: UNI_OPTION .

    $default  reduce using rule 158 (option)


State 206

  166 option: GEOM_MODIFIER_1D .

    $default  reduce using rule 166 (option)


State 207

  167 option: GEOM_MODIFIER_2D .

    $default  reduce using rule 167 (option)


State 208

  168 option: GEOM_MODIFIER_3D .

    $default  reduce using rule 168 (option)


State 209

  169 option: SAT_OPTION .

    $default  reduce using rule 169 (option)


State 210

  170 option: FTZ_OPTION .

    $default  reduce using rule 170 (option)


State 211

  171 option: NEG_OPTION .

    $default  reduce using rule 171 (option)


State 212

  152 option: SYNC_OPTION .

    $default  reduce using rule 152 (option)


State 213

  154 option: RED_OPTION .

    $default  reduce using rule 154 (option)


State 214

  155 option: POPC_REDUCTION .

    $default  reduce using rule 155 (option)


State 215

  156 option: AND_REDUCTION .

    $default  reduce using rule 156 (option)


State 216

  157 option: OR_REDUCTION .

    $default  reduce using rule 157 (option)


State 217

  153 option: ARRIVE_OPTION .

    $default  reduce using rule 153 (option)


State 218

  186 atomic_operation_spec: ATOMIC_AND .

    $default  reduce using rule 186 (atomic_operation_spec)


State 219

  187 atomic_operation_spec: ATOMIC_OR .

    $default  reduce using rule 187 (atomic_operation_spec)


State 220

  188 atomic_operation_spec: ATOMIC_XOR .

    $default  reduce using rule 188 (atomic_operation_spec)


State 221

  189 atomic_operation_spec: ATOMIC_CAS .

    $default  reduce using rule 189 (atomic_operation_spec)


State 222

  190 atomic_operation_spec: ATOMIC_EXCH .

    $default  reduce using rule 190 (atomic_operation_spec)


State 223

  191 atomic_operation_spec: ATOMIC_ADD .

    $default  reduce using rule 191 (atomic_operation_spec)


State 224

  192 atomic_operation_spec: ATOMIC_INC .

    $default  reduce using rule 192 (atomic_operation_spec)


State 225

  193 atomic_operation_spec: ATOMIC_DEC .

    $default  reduce using rule 193 (atomic_operation_spec)


State 226

  194 atomic_operation_spec: ATOMIC_MIN .

    $default  reduce using rule 194 (atomic_operation_spec)


State 227

  195 atomic_operation_spec: ATOMIC_MAX .

    $default  reduce using rule 195 (atomic_operation_spec)


State 228

  172 option: APPROX_OPTION .

    $default  reduce using rule 172 (option)


State 229

  173 option: FULL_OPTION .

    $default  reduce using rule 173 (option)


State 230

  160 option: ANY_OPTION .

    $default  reduce using rule 160 (option)


State 231

  161 option: ALL_OPTION .

    $default  reduce using rule 161 (option)


State 232

  162 option: BALLOT_OPTION .

    $default  reduce using rule 162 (option)


State 233

  163 option: GLOBAL_OPTION .

    $default  reduce using rule 163 (option)


State 234

  164 option: CTA_OPTION .

    $default  reduce using rule 164 (option)


State 235

  165 option: SYS_OPTION .

    $default  reduce using rule 165 (option)


State 236

  174 option: EXIT_OPTION .

    $default  reduce using rule 174 (option)


State 237

  175 option: ABS_OPTION .

    $default  reduce using rule 175 (option)


State 238

  177 option: TO_OPTION .

    $default  reduce using rule 177 (option)


State 239

  179 option: CA_OPTION .

    $default  reduce using rule 179 (option)


State 240

  180 option: CG_OPTION .

    $default  reduce using rule 180 (option)


State 241

  181 option: CS_OPTION .

    $default  reduce using rule 181 (option)


State 242

  182 option: LU_OPTION .

    $default  reduce using rule 182 (option)


State 243

  183 option: CV_OPTION .

    $default  reduce using rule 183 (option)


State 244

  184 option: WB_OPTION .

    $default  reduce using rule 184 (option)


State 245

  185 option: WT_OPTION .

    $default  reduce using rule 185 (option)


State 246

  150 option: addressable_spec .

    $default  reduce using rule 150 (option)


State 247

  148 option: type_spec .

    $default  reduce using rule 148 (option)


State 248

  131 opcode_spec: OPCODE $@13 option_list .

    $default  reduce using rule 131 (opcode_spec)


State 249

   83 addressable_spec: . CONST_DIRECTIVE
   84                 | . GLOBAL_DIRECTIVE
   85                 | . LOCAL_DIRECTIVE
   86                 | . PARAM_DIRECTIVE
   87                 | . SHARED_DIRECTIVE
   88                 | . SURF_DIRECTIVE
   89                 | . TEX_DIRECTIVE
   90 type_spec: . scalar_type
   91          | . vector_spec scalar_type
   92 vector_spec: . V2_TYPE
   93            | . V3_TYPE
   94            | . V4_TYPE
   95 scalar_type: . S8_TYPE
   96            | . S16_TYPE
   97            | . S32_TYPE
   98            | . S64_TYPE
   99            | . U8_TYPE
  100            | . U16_TYPE
  101            | . U32_TYPE
  102            | . U64_TYPE
  103            | . F16_TYPE
  104            | . F32_TYPE
  105            | . F64_TYPE
  106            | . FF64_TYPE
  107            | . B8_TYPE
  108            | . B16_TYPE
  109            | . B32_TYPE
  110            | . B64_TYPE
  111            | . BB64_TYPE
  112            | . BB128_TYPE
  113            | . PRED_TYPE
  114            | . TEXREF_TYPE
  115            | . SAMPLERREF_TYPE
  116            | . SURFREF_TYPE
  146 option_list: . option
  146            | option .  [IDENTIFIER, INT_OPERAND, FLOAT_OPERAND, DOUBLE_OPERAND, LEFT_SQUARE_BRACKET, SPECIAL_REGISTER, MINUS, SEMI_COLON, EXCLAMATION, LEFT_BRACE, LEFT_PAREN]
  147            | . option option_list
  147            | option . option_list
  148 option: . type_spec
  149       | . compare_spec
  150       | . addressable_spec
  151       | . rounding_mode
  152       | . SYNC_OPTION
  153       | . ARRIVE_OPTION
  154       | . RED_OPTION
  155       | . POPC_REDUCTION
  156       | . AND_REDUCTION
  157       | . OR_REDUCTION
  158       | . UNI_OPTION
  159       | . WIDE_OPTION
  160       | . ANY_OPTION
  161       | . ALL_OPTION
  162       | . BALLOT_OPTION
  163       | . GLOBAL_OPTION
  164       | . CTA_OPTION
  165       | . SYS_OPTION
  166       | . GEOM_MODIFIER_1D
  167       | . GEOM_MODIFIER_2D
  168       | . GEOM_MODIFIER_3D
  169       | . SAT_OPTION
  170       | . FTZ_OPTION
  171       | . NEG_OPTION
  172       | . APPROX_OPTION
  173       | . FULL_OPTION
  174       | . EXIT_OPTION
  175       | . ABS_OPTION
  176       | . atomic_operation_spec
  177       | . TO_OPTION
  178       | . HALF_OPTION
  179       | . CA_OPTION
  180       | . CG_OPTION
  181       | . CS_OPTION
  182       | . LU_OPTION
  183       | . CV_OPTION
  184       | . WB_OPTION
  185       | . WT_OPTION
  186 atomic_operation_spec: . ATOMIC_AND
  187                      | . ATOMIC_OR
  188                      | . ATOMIC_XOR
  189                      | . ATOMIC_CAS
  190                      | . ATOMIC_EXCH
  191                      | . ATOMIC_ADD
  192                      | . ATOMIC_INC
  193                      | . ATOMIC_DEC
  194                      | . ATOMIC_MIN
  195                      | . ATOMIC_MAX
  196 rounding_mode: . floating_point_rounding_mode
  197              | . integer_rounding_mode
  198 floating_point_rounding_mode: . RN_OPTION
  199                             | . RZ_OPTION
  200                             | . RM_OPTION
  201                             | . RP_OPTION
  202 integer_rounding_mode: . RNI_OPTION
  203                      | . RZI_OPTION
  204                      | . RMI_OPTION
  205                      | . RPI_OPTION
  206 compare_spec: . EQ_OPTION
  207             | . NE_OPTION
  208             | . LT_OPTION
  209             | . LE_OPTION
  210             | . GT_OPTION
  211             | . GE_OPTION
  212             | . LO_OPTION
  213             | . LS_OPTION
  214             | . HI_OPTION
  215             | . HS_OPTION
  216             | . EQU_OPTION
  217             | . NEU_OPTION
  218             | . LTU_OPTION
  219             | . LEU_OPTION
  220             | . GTU_OPTION
  221             | . GEU_OPTION
  222             | . NUM_OPTION
  223             | . NAN_OPTION

    CONST_DIRECTIVE   shift, and go to state 4
    GLOBAL_DIRECTIVE  shift, and go to state 10
    LOCAL_DIRECTIVE   shift, and go to state 11
    PARAM_DIRECTIVE   shift, and go to state 13
    SHARED_DIRECTIVE  shift, and go to state 16
    SURF_DIRECTIVE    shift, and go to state 18
    TEX_DIRECTIVE     shift, and go to state 20
    S8_TYPE           shift, and go to state 24
    S16_TYPE          shift, and go to state 25
    S32_TYPE          shift, and go to state 26
    S64_TYPE          shift, and go to state 27
    U8_TYPE           shift, and go to state 28
    U16_TYPE          shift, and go to state 29
    U32_TYPE          shift, and go to state 30
    U64_TYPE          shift, and go to state 31
    F16_TYPE          shift, and go to state 32
    F32_TYPE          shift, and go to state 33
    F64_TYPE          shift, and go to state 34
    FF64_TYPE         shift, and go to state 35
    B8_TYPE           shift, and go to state 36
    B16_TYPE          shift, and go to state 37
    B32_TYPE          shift, and go to state 38
    B64_TYPE          shift, and go to state 39
    BB64_TYPE         shift, and go to state 40
    BB128_TYPE        shift, and go to state 41
    PRED_TYPE         shift, and go to state 42
    TEXREF_TYPE       shift, and go to state 43
    SAMPLERREF_TYPE   shift, and go to state 44
    SURFREF_TYPE      shift, and go to state 45
    V2_TYPE           shift, and go to state 46
    V3_TYPE           shift, and go to state 47
    V4_TYPE           shift, and go to state 48
    HALF_OPTION       shift, and go to state 177
    EQ_OPTION         shift, and go to state 178
    NE_OPTION         shift, and go to state 179
    LT_OPTION         shift, and go to state 180
    LE_OPTION         shift, and go to state 181
    GT_OPTION         shift, and go to state 182
    GE_OPTION         shift, and go to state 183
    LO_OPTION         shift, and go to state 184
    LS_OPTION         shift, and go to state 185
    HI_OPTION         shift, and go to state 186
    HS_OPTION         shift, and go to state 187
    EQU_OPTION        shift, and go to state 188
    NEU_OPTION        shift, and go to state 189
    LTU_OPTION        shift, and go to state 190
    LEU_OPTION        shift, and go to state 191
    GTU_OPTION        shift, and go to state 192
    GEU_OPTION        shift, and go to state 193
    NUM_OPTION        shift, and go to state 194
    NAN_OPTION        shift, and go to state 195
    WIDE_OPTION       shift, and go to state 196
    RN_OPTION         shift, and go to state 197
    RZ_OPTION         shift, and go to state 198
    RM_OPTION         shift, and go to state 199
    RP_OPTION         shift, and go to state 200
    RNI_OPTION        shift, and go to state 201
    RZI_OPTION        shift, and go to state 202
    RMI_OPTION        shift, and go to state 203
    RPI_OPTION        shift, and go to state 204
    UNI_OPTION        shift, and go to state 205
    GEOM_MODIFIER_1D  shift, and go to state 206
    GEOM_MODIFIER_2D  shift, and go to state 207
    GEOM_MODIFIER_3D  shift, and go to state 208
    SAT_OPTION        shift, and go to state 209
    FTZ_OPTION        shift, and go to state 210
    NEG_OPTION        shift, and go to state 211
    SYNC_OPTION       shift, and go to state 212
    RED_OPTION        shift, and go to state 213
    POPC_REDUCTION    shift, and go to state 214
    AND_REDUCTION     shift, and go to state 215
    OR_REDUCTION      shift, and go to state 216
    ARRIVE_OPTION     shift, and go to state 217
    ATOMIC_AND        shift, and go to state 218
    ATOMIC_OR         shift, and go to state 219
    ATOMIC_XOR        shift, and go to state 220
    ATOMIC_CAS        shift, and go to state 221
    ATOMIC_EXCH       shift, and go to state 222
    ATOMIC_ADD        shift, and go to state 223
    ATOMIC_INC        shift, and go to state 224
    ATOMIC_DEC        shift, and go to state 225
    ATOMIC_MIN        shift, and go to state 226
    ATOMIC_MAX        shift, and go to state 227
    APPROX_OPTION     shift, and go to state 228
    FULL_OPTION       shift, and go to state 229
    ANY_OPTION        shift, and go to state 230
    ALL_OPTION        shift, and go to state 231
    BALLOT_OPTION     shift, and go to state 232
    GLOBAL_OPTION     shift, and go to state 233
    CTA_OPTION        shift, and go to state 234
    SYS_OPTION        shift, and go to state 235
    EXIT_OPTION       shift, and go to state 236
    ABS_OPTION        shift, and go to state 237
    TO_OPTION         shift, and go to state 238
    CA_OPTION         shift, and go to state 239
    CG_OPTION         shift, and go to state 240
    CS_OPTION         shift, and go to state 241
    LU_OPTION         shift, and go to state 242
    CV_OPTION         shift, and go to state 243
    WB_OPTION         shift, and go to state 244
    WT_OPTION         shift, and go to state 245

    $default  reduce using rule 146 (option_list)

    addressable_spec              go to state 246
    type_spec                     go to state 247
    vector_spec                   go to state 61
    scalar_type                   go to state 62
    option_list                   go to state 295
    option                        go to state 249
    atomic_operation_spec         go to state 250
    rounding_mode                 go to state 251
    floating_point_rounding_mode  go to state 252
    integer_rounding_mode         go to state 253
    compare_spec                  go to state 254


State 250

  176 option: atomic_operation_spec .

    $default  reduce using rule 176 (option)


State 251

  151 option: rounding_mode .

    $default  reduce using rule 151 (option)


State 252

  196 rounding_mode: floating_point_rounding_mode .

    $default  reduce using rule 196 (rounding_mode)


State 253

  197 rounding_mode: integer_rounding_mode .

    $default  reduce using rule 197 (rounding_mode)


State 254

  149 option: compare_spec .

    $default  reduce using rule 149 (option)


State 255

  136 pred_spec: PRED IDENTIFIER EQ_OPTION .

    $default  reduce using rule 136 (pred_spec)


State 256

  138 pred_spec: PRED IDENTIFIER NE_OPTION .

    $default  reduce using rule 138 (pred_spec)


State 257

  135 pred_spec: PRED IDENTIFIER LT_OPTION .

    $default  reduce using rule 135 (pred_spec)


State 258

  137 pred_spec: PRED IDENTIFIER LE_OPTION .

    $default  reduce using rule 137 (pred_spec)


State 259

  139 pred_spec: PRED IDENTIFIER GE_OPTION .

    $default  reduce using rule 139 (pred_spec)


State 260

  140 pred_spec: PRED IDENTIFIER EQU_OPTION .

    $default  reduce using rule 140 (pred_spec)


State 261

  142 pred_spec: PRED IDENTIFIER NEU_OPTION .

    $default  reduce using rule 142 (pred_spec)


State 262

  141 pred_spec: PRED IDENTIFIER GTU_OPTION .

    $default  reduce using rule 141 (pred_spec)


State 263

  143 pred_spec: PRED IDENTIFIER CF_OPTION .

    $default  reduce using rule 143 (pred_spec)


State 264

  144 pred_spec: PRED IDENTIFIER SF_OPTION .

    $default  reduce using rule 144 (pred_spec)


State 265

  145 pred_spec: PRED IDENTIFIER NSF_OPTION .

    $default  reduce using rule 145 (pred_spec)


State 266

  134 pred_spec: PRED EXCLAMATION IDENTIFIER .

    $default  reduce using rule 134 (pred_spec)


State 267

  236 operand: IDENTIFIER LO_OPTION .

    $default  reduce using rule 236 (operand)


State 268

  238 operand: IDENTIFIER HI_OPTION .

    $default  reduce using rule 238 (operand)


State 269

  255 memory_operand: IDENTIFIER LEFT_SQUARE_BRACKET . address_expression RIGHT_SQUARE_BRACKET
  256               | IDENTIFIER LEFT_SQUARE_BRACKET . literal_operand RIGHT_SQUARE_BRACKET
  257               | IDENTIFIER LEFT_SQUARE_BRACKET . twin_operand RIGHT_SQUARE_BRACKET
  259 twin_operand: . IDENTIFIER PLUS IDENTIFIER
  260             | . IDENTIFIER PLUS IDENTIFIER LO_OPTION
  261             | . IDENTIFIER PLUS IDENTIFIER HI_OPTION
  262             | . IDENTIFIER PLUS EQUALS IDENTIFIER
  263             | . IDENTIFIER PLUS EQUALS IDENTIFIER LO_OPTION
  264             | . IDENTIFIER PLUS EQUALS IDENTIFIER HI_OPTION
  265             | . IDENTIFIER PLUS EQUALS INT_OPERAND
  266 literal_operand: . INT_OPERAND
  267                | . FLOAT_OPERAND
  268                | . DOUBLE_OPERAND
  269 address_expression: . IDENTIFIER
  270                   | . IDENTIFIER LO_OPTION
  271                   | . IDENTIFIER HI_OPTION
  272                   | . IDENTIFIER PLUS INT_OPERAND
  273                   | . INT_OPERAND

    IDENTIFIER      shift, and go to state 296
    INT_OPERAND     shift, and go to state 297
    FLOAT_OPERAND   shift, and go to state 133
    DOUBLE_OPERAND  shift, and go to state 134

    twin_operand        go to state 298
    literal_operand     go to state 299
    address_expression  go to state 300


State 270

  235 operand: IDENTIFIER PLUS . INT_OPERAND

    INT_OPERAND  shift, and go to state 301


State 271

  240 operand: IDENTIFIER PIPE . IDENTIFIER
  241        | IDENTIFIER PIPE . IDENTIFIER LO_OPTION
  242        | IDENTIFIER PIPE . IDENTIFIER HI_OPTION

    IDENTIFIER  shift, and go to state 302


State 272

  243 operand: IDENTIFIER BACKSLASH . IDENTIFIER
  244        | IDENTIFIER BACKSLASH . IDENTIFIER LO_OPTION
  245        | IDENTIFIER BACKSLASH . IDENTIFIER HI_OPTION

    IDENTIFIER  shift, and go to state 303


State 273

  251 tex_operand: LEFT_SQUARE_BRACKET IDENTIFIER . COMMA $@14 vector_operand RIGHT_SQUARE_BRACKET
  269 address_expression: IDENTIFIER .  [RIGHT_SQUARE_BRACKET]
  270                   | IDENTIFIER . LO_OPTION
  271                   | IDENTIFIER . HI_OPTION
  272                   | IDENTIFIER . PLUS INT_OPERAND

    COMMA      shift, and go to state 304
    LO_OPTION  shift, and go to state 305
    HI_OPTION  shift, and go to state 306
    PLUS       shift, and go to state 307

    $default  reduce using rule 269 (address_expression)


State 274

  273 address_expression: INT_OPERAND .

    $default  reduce using rule 273 (address_expression)


State 275

  254 memory_operand: LEFT_SQUARE_BRACKET address_expression . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 308


State 276

  252 builtin_operand: SPECIAL_REGISTER DIMENSION_MODIFIER .

    $default  reduce using rule 252 (builtin_operand)


State 277

  228 operand: MINUS IDENTIFIER .  [COMMA, SEMI_COLON, RIGHT_PAREN]
  237        | MINUS IDENTIFIER . LO_OPTION
  239        | MINUS IDENTIFIER . HI_OPTION
  255 memory_operand: IDENTIFIER . LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET
  256               | IDENTIFIER . LEFT_SQUARE_BRACKET literal_operand RIGHT_SQUARE_BRACKET
  257               | IDENTIFIER . LEFT_SQUARE_BRACKET twin_operand RIGHT_SQUARE_BRACKET

    LO_OPTION            shift, and go to state 309
    HI_OPTION            shift, and go to state 310
    LEFT_SQUARE_BRACKET  shift, and go to state 269

    $default  reduce using rule 228 (operand)


State 278

  254 memory_operand: LEFT_SQUARE_BRACKET . address_expression RIGHT_SQUARE_BRACKET
  269 address_expression: . IDENTIFIER
  270                   | . IDENTIFIER LO_OPTION
  271                   | . IDENTIFIER HI_OPTION
  272                   | . IDENTIFIER PLUS INT_OPERAND
  273                   | . INT_OPERAND

    IDENTIFIER   shift, and go to state 311
    INT_OPERAND  shift, and go to state 274

    address_expression  go to state 275


State 279

  254 memory_operand: . LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET
  255               | . IDENTIFIER LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET
  256               | . IDENTIFIER LEFT_SQUARE_BRACKET literal_operand RIGHT_SQUARE_BRACKET
  257               | . IDENTIFIER LEFT_SQUARE_BRACKET twin_operand RIGHT_SQUARE_BRACKET
  258               | . MINUS memory_operand
  258               | MINUS . memory_operand

    IDENTIFIER           shift, and go to state 312
    LEFT_SQUARE_BRACKET  shift, and go to state 278
    MINUS                shift, and go to state 279

    memory_operand  go to state 281


State 280

  233 operand: MINUS vector_operand .

    $default  reduce using rule 233 (operand)


State 281

  258 memory_operand: MINUS memory_operand .

    $default  reduce using rule 258 (memory_operand)


State 282

  227 operand: EXCLAMATION IDENTIFIER .

    $default  reduce using rule 227 (operand)


State 283

  246 vector_operand: LEFT_BRACE IDENTIFIER . COMMA IDENTIFIER RIGHT_BRACE
  247               | LEFT_BRACE IDENTIFIER . COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  248               | LEFT_BRACE IDENTIFIER . COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  249               | LEFT_BRACE IDENTIFIER . RIGHT_BRACE

    COMMA        shift, and go to state 313
    RIGHT_BRACE  shift, and go to state 314


State 284

  125 instruction: opcode_spec LEFT_PAREN operand . RIGHT_PAREN $@12 COMMA operand COMMA LEFT_PAREN operand_list RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 315


State 285

  126 instruction: opcode_spec operand COMMA . LEFT_PAREN operand_list RIGHT_PAREN
  127            | opcode_spec operand COMMA . LEFT_PAREN RIGHT_PAREN
  224 operand_list: . operand
  225             | . operand COMMA operand_list
  225             | operand COMMA . operand_list
  226 operand: . IDENTIFIER
  227        | . EXCLAMATION IDENTIFIER
  228        | . MINUS IDENTIFIER
  229        | . memory_operand
  230        | . literal_operand
  231        | . builtin_operand
  232        | . vector_operand
  233        | . MINUS vector_operand
  234        | . tex_operand
  235        | . IDENTIFIER PLUS INT_OPERAND
  236        | . IDENTIFIER LO_OPTION
  237        | . MINUS IDENTIFIER LO_OPTION
  238        | . IDENTIFIER HI_OPTION
  239        | . MINUS IDENTIFIER HI_OPTION
  240        | . IDENTIFIER PIPE IDENTIFIER
  241        | . IDENTIFIER PIPE IDENTIFIER LO_OPTION
  242        | . IDENTIFIER PIPE IDENTIFIER HI_OPTION
  243        | . IDENTIFIER BACKSLASH IDENTIFIER
  244        | . IDENTIFIER BACKSLASH IDENTIFIER LO_OPTION
  245        | . IDENTIFIER BACKSLASH IDENTIFIER HI_OPTION
  246 vector_operand: . LEFT_BRACE IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  247               | . LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  248               | . LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  249               | . LEFT_BRACE IDENTIFIER RIGHT_BRACE
  251 tex_operand: . LEFT_SQUARE_BRACKET IDENTIFIER COMMA $@14 vector_operand RIGHT_SQUARE_BRACKET
  252 builtin_operand: . SPECIAL_REGISTER DIMENSION_MODIFIER
  253                | . SPECIAL_REGISTER
  254 memory_operand: . LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET
  255               | . IDENTIFIER LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET
  256               | . IDENTIFIER LEFT_SQUARE_BRACKET literal_operand RIGHT_SQUARE_BRACKET
  257               | . IDENTIFIER LEFT_SQUARE_BRACKET twin_operand RIGHT_SQUARE_BRACKET
  258               | . MINUS memory_operand
  266 literal_operand: . INT_OPERAND
  267                | . FLOAT_OPERAND
  268                | . DOUBLE_OPERAND

    IDENTIFIER           shift, and go to state 149
    INT_OPERAND          shift, and go to state 132
    FLOAT_OPERAND        shift, and go to state 133
    DOUBLE_OPERAND       shift, and go to state 134
    LEFT_SQUARE_BRACKET  shift, and go to state 150
    SPECIAL_REGISTER     shift, and go to state 151
    MINUS                shift, and go to state 152
    EXCLAMATION          shift, and go to state 153
    LEFT_BRACE           shift, and go to state 154
    LEFT_PAREN           shift, and go to state 316

    operand_list     go to state 317
    operand          go to state 318
    vector_operand   go to state 158
    tex_operand      go to state 159
    builtin_operand  go to state 160
    memory_operand   go to state 161
    literal_operand  go to state 162


State 286

  123 instruction_statement: pred_spec instruction SEMI_COLON .

    $default  reduce using rule 123 (instruction_statement)


State 287

   10 block_spec: MAXNTID_DIRECTIVE INT_OPERAND COMMA INT_OPERAND . COMMA INT_OPERAND

    COMMA  shift, and go to state 319


State 288

   34 param_entry: PARAM_DIRECTIVE $@10 variable_spec . ptr_spec identifier_spec
   37 ptr_spec: . %empty  [IDENTIFIER]
   38         | . PTR_DIRECTIVE ptr_space_spec ptr_align_spec
   39         | . PTR_DIRECTIVE ptr_align_spec

    PTR_DIRECTIVE  shift, and go to state 320

    $default  reduce using rule 37 (ptr_spec)

    ptr_spec  go to state 321


State 289

   36 param_entry: REG_DIRECTIVE $@11 variable_spec . identifier_spec
   69 identifier_spec: . IDENTIFIER
   70                | . IDENTIFIER LEFT_ANGLE_BRACKET INT_OPERAND RIGHT_ANGLE_BRACKET
   71                | . IDENTIFIER LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
   72                | . IDENTIFIER LEFT_SQUARE_BRACKET INT_OPERAND RIGHT_SQUARE_BRACKET

    IDENTIFIER  shift, and go to state 79

    identifier_spec  go to state 322


State 290

   17 function_decl: function_decl_header LEFT_PAREN $@4 param_entry RIGHT_PAREN $@5 . function_ident_param
   23 function_ident_param: . IDENTIFIER $@7 LEFT_PAREN $@8 param_list RIGHT_PAREN
   24                     | . IDENTIFIER

    IDENTIFIER  shift, and go to state 99

    function_ident_param  go to state 323


State 291

   23 function_ident_param: IDENTIFIER $@7 LEFT_PAREN $@8 . param_list RIGHT_PAREN
   29 param_list: . %empty  [COMMA, RIGHT_PAREN]
   30           | . param_entry
   32           | . param_list COMMA $@9 param_entry
   34 param_entry: . PARAM_DIRECTIVE $@10 variable_spec ptr_spec identifier_spec
   36            | . REG_DIRECTIVE $@11 variable_spec identifier_spec

    PARAM_DIRECTIVE  shift, and go to state 124
    REG_DIRECTIVE    shift, and go to state 125

    $default  reduce using rule 29 (param_list)

    param_list   go to state 324
    param_entry  go to state 325


State 292

  118 initializer_list: LEFT_BRACE initializer_list RIGHT_BRACE .

    $default  reduce using rule 118 (initializer_list)


State 293

  120 literal_list: literal_list COMMA . literal_operand
  266 literal_operand: . INT_OPERAND
  267                | . FLOAT_OPERAND
  268                | . DOUBLE_OPERAND

    INT_OPERAND     shift, and go to state 132
    FLOAT_OPERAND   shift, and go to state 133
    DOUBLE_OPERAND  shift, and go to state 134

    literal_operand  go to state 326


State 294

  117 initializer_list: LEFT_BRACE literal_list RIGHT_BRACE .

    $default  reduce using rule 117 (initializer_list)


State 295

  147 option_list: option option_list .

    $default  reduce using rule 147 (option_list)


State 296

  259 twin_operand: IDENTIFIER . PLUS IDENTIFIER
  260             | IDENTIFIER . PLUS IDENTIFIER LO_OPTION
  261             | IDENTIFIER . PLUS IDENTIFIER HI_OPTION
  262             | IDENTIFIER . PLUS EQUALS IDENTIFIER
  263             | IDENTIFIER . PLUS EQUALS IDENTIFIER LO_OPTION
  264             | IDENTIFIER . PLUS EQUALS IDENTIFIER HI_OPTION
  265             | IDENTIFIER . PLUS EQUALS INT_OPERAND
  269 address_expression: IDENTIFIER .  [RIGHT_SQUARE_BRACKET]
  270                   | IDENTIFIER . LO_OPTION
  271                   | IDENTIFIER . HI_OPTION
  272                   | IDENTIFIER . PLUS INT_OPERAND

    LO_OPTION  shift, and go to state 305
    HI_OPTION  shift, and go to state 306
    PLUS       shift, and go to state 327

    $default  reduce using rule 269 (address_expression)


State 297

  266 literal_operand: INT_OPERAND .  [RIGHT_SQUARE_BRACKET]
  273 address_expression: INT_OPERAND .  [RIGHT_SQUARE_BRACKET]

    RIGHT_SQUARE_BRACKET  reduce using rule 266 (literal_operand)
    RIGHT_SQUARE_BRACKET  [reduce using rule 273 (address_expression)]
    $default              reduce using rule 266 (literal_operand)


State 298

  257 memory_operand: IDENTIFIER LEFT_SQUARE_BRACKET twin_operand . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 328


State 299

  256 memory_operand: IDENTIFIER LEFT_SQUARE_BRACKET literal_operand . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 329


State 300

  255 memory_operand: IDENTIFIER LEFT_SQUARE_BRACKET address_expression . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 330


State 301

  235 operand: IDENTIFIER PLUS INT_OPERAND .

    $default  reduce using rule 235 (operand)


State 302

  240 operand: IDENTIFIER PIPE IDENTIFIER .  [COMMA, SEMI_COLON, RIGHT_PAREN]
  241        | IDENTIFIER PIPE IDENTIFIER . LO_OPTION
  242        | IDENTIFIER PIPE IDENTIFIER . HI_OPTION

    LO_OPTION  shift, and go to state 331
    HI_OPTION  shift, and go to state 332

    $default  reduce using rule 240 (operand)


State 303

  243 operand: IDENTIFIER BACKSLASH IDENTIFIER .  [COMMA, SEMI_COLON, RIGHT_PAREN]
  244        | IDENTIFIER BACKSLASH IDENTIFIER . LO_OPTION
  245        | IDENTIFIER BACKSLASH IDENTIFIER . HI_OPTION

    LO_OPTION  shift, and go to state 333
    HI_OPTION  shift, and go to state 334

    $default  reduce using rule 243 (operand)


State 304

  250 $@14: . %empty
  251 tex_operand: LEFT_SQUARE_BRACKET IDENTIFIER COMMA . $@14 vector_operand RIGHT_SQUARE_BRACKET

    $default  reduce using rule 250 ($@14)

    $@14  go to state 335


State 305

  270 address_expression: IDENTIFIER LO_OPTION .

    $default  reduce using rule 270 (address_expression)


State 306

  271 address_expression: IDENTIFIER HI_OPTION .

    $default  reduce using rule 271 (address_expression)


State 307

  272 address_expression: IDENTIFIER PLUS . INT_OPERAND

    INT_OPERAND  shift, and go to state 336


State 308

  254 memory_operand: LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 254 (memory_operand)


State 309

  237 operand: MINUS IDENTIFIER LO_OPTION .

    $default  reduce using rule 237 (operand)


State 310

  239 operand: MINUS IDENTIFIER HI_OPTION .

    $default  reduce using rule 239 (operand)


State 311

  269 address_expression: IDENTIFIER .  [RIGHT_SQUARE_BRACKET]
  270                   | IDENTIFIER . LO_OPTION
  271                   | IDENTIFIER . HI_OPTION
  272                   | IDENTIFIER . PLUS INT_OPERAND

    LO_OPTION  shift, and go to state 305
    HI_OPTION  shift, and go to state 306
    PLUS       shift, and go to state 307

    $default  reduce using rule 269 (address_expression)


State 312

  255 memory_operand: IDENTIFIER . LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET
  256               | IDENTIFIER . LEFT_SQUARE_BRACKET literal_operand RIGHT_SQUARE_BRACKET
  257               | IDENTIFIER . LEFT_SQUARE_BRACKET twin_operand RIGHT_SQUARE_BRACKET

    LEFT_SQUARE_BRACKET  shift, and go to state 269


State 313

  246 vector_operand: LEFT_BRACE IDENTIFIER COMMA . IDENTIFIER RIGHT_BRACE
  247               | LEFT_BRACE IDENTIFIER COMMA . IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  248               | LEFT_BRACE IDENTIFIER COMMA . IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE

    IDENTIFIER  shift, and go to state 337


State 314

  249 vector_operand: LEFT_BRACE IDENTIFIER RIGHT_BRACE .

    $default  reduce using rule 249 (vector_operand)


State 315

  124 $@12: . %empty
  125 instruction: opcode_spec LEFT_PAREN operand RIGHT_PAREN . $@12 COMMA operand COMMA LEFT_PAREN operand_list RIGHT_PAREN

    $default  reduce using rule 124 ($@12)

    $@12  go to state 338


State 316

  126 instruction: opcode_spec operand COMMA LEFT_PAREN . operand_list RIGHT_PAREN
  127            | opcode_spec operand COMMA LEFT_PAREN . RIGHT_PAREN
  224 operand_list: . operand
  225             | . operand COMMA operand_list
  226 operand: . IDENTIFIER
  227        | . EXCLAMATION IDENTIFIER
  228        | . MINUS IDENTIFIER
  229        | . memory_operand
  230        | . literal_operand
  231        | . builtin_operand
  232        | . vector_operand
  233        | . MINUS vector_operand
  234        | . tex_operand
  235        | . IDENTIFIER PLUS INT_OPERAND
  236        | . IDENTIFIER LO_OPTION
  237        | . MINUS IDENTIFIER LO_OPTION
  238        | . IDENTIFIER HI_OPTION
  239        | . MINUS IDENTIFIER HI_OPTION
  240        | . IDENTIFIER PIPE IDENTIFIER
  241        | . IDENTIFIER PIPE IDENTIFIER LO_OPTION
  242        | . IDENTIFIER PIPE IDENTIFIER HI_OPTION
  243        | . IDENTIFIER BACKSLASH IDENTIFIER
  244        | . IDENTIFIER BACKSLASH IDENTIFIER LO_OPTION
  245        | . IDENTIFIER BACKSLASH IDENTIFIER HI_OPTION
  246 vector_operand: . LEFT_BRACE IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  247               | . LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  248               | . LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  249               | . LEFT_BRACE IDENTIFIER RIGHT_BRACE
  251 tex_operand: . LEFT_SQUARE_BRACKET IDENTIFIER COMMA $@14 vector_operand RIGHT_SQUARE_BRACKET
  252 builtin_operand: . SPECIAL_REGISTER DIMENSION_MODIFIER
  253                | . SPECIAL_REGISTER
  254 memory_operand: . LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET
  255               | . IDENTIFIER LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET
  256               | . IDENTIFIER LEFT_SQUARE_BRACKET literal_operand RIGHT_SQUARE_BRACKET
  257               | . IDENTIFIER LEFT_SQUARE_BRACKET twin_operand RIGHT_SQUARE_BRACKET
  258               | . MINUS memory_operand
  266 literal_operand: . INT_OPERAND
  267                | . FLOAT_OPERAND
  268                | . DOUBLE_OPERAND

    IDENTIFIER           shift, and go to state 149
    INT_OPERAND          shift, and go to state 132
    FLOAT_OPERAND        shift, and go to state 133
    DOUBLE_OPERAND       shift, and go to state 134
    LEFT_SQUARE_BRACKET  shift, and go to state 150
    SPECIAL_REGISTER     shift, and go to state 151
    MINUS                shift, and go to state 152
    EXCLAMATION          shift, and go to state 153
    LEFT_BRACE           shift, and go to state 154
    RIGHT_PAREN          shift, and go to state 339

    operand_list     go to state 340
    operand          go to state 318
    vector_operand   go to state 158
    tex_operand      go to state 159
    builtin_operand  go to state 160
    memory_operand   go to state 161
    literal_operand  go to state 162


State 317

  225 operand_list: operand COMMA operand_list .

    $default  reduce using rule 225 (operand_list)


State 318

  224 operand_list: operand .  [SEMI_COLON, RIGHT_PAREN]
  225             | operand . COMMA operand_list

    COMMA  shift, and go to state 341

    $default  reduce using rule 224 (operand_list)


State 319

   10 block_spec: MAXNTID_DIRECTIVE INT_OPERAND COMMA INT_OPERAND COMMA . INT_OPERAND

    INT_OPERAND  shift, and go to state 342


State 320

   38 ptr_spec: PTR_DIRECTIVE . ptr_space_spec ptr_align_spec
   39         | PTR_DIRECTIVE . ptr_align_spec
   40 ptr_space_spec: . GLOBAL_DIRECTIVE
   41               | . LOCAL_DIRECTIVE
   42               | . SHARED_DIRECTIVE
   43 ptr_align_spec: . ALIGN_DIRECTIVE INT_OPERAND

    ALIGN_DIRECTIVE   shift, and go to state 343
    GLOBAL_DIRECTIVE  shift, and go to state 344
    LOCAL_DIRECTIVE   shift, and go to state 345
    SHARED_DIRECTIVE  shift, and go to state 346

    ptr_space_spec  go to state 347
    ptr_align_spec  go to state 348


State 321

   34 param_entry: PARAM_DIRECTIVE $@10 variable_spec ptr_spec . identifier_spec
   69 identifier_spec: . IDENTIFIER
   70                | . IDENTIFIER LEFT_ANGLE_BRACKET INT_OPERAND RIGHT_ANGLE_BRACKET
   71                | . IDENTIFIER LEFT_SQUARE_BRACKET RIGHT_SQUARE_BRACKET
   72                | . IDENTIFIER LEFT_SQUARE_BRACKET INT_OPERAND RIGHT_SQUARE_BRACKET

    IDENTIFIER  shift, and go to state 79

    identifier_spec  go to state 349


State 322

   36 param_entry: REG_DIRECTIVE $@11 variable_spec identifier_spec .

    $default  reduce using rule 36 (param_entry)


State 323

   17 function_decl: function_decl_header LEFT_PAREN $@4 param_entry RIGHT_PAREN $@5 function_ident_param .

    $default  reduce using rule 17 (function_decl)


State 324

   23 function_ident_param: IDENTIFIER $@7 LEFT_PAREN $@8 param_list . RIGHT_PAREN
   32 param_list: param_list . COMMA $@9 param_entry

    COMMA        shift, and go to state 350
    RIGHT_PAREN  shift, and go to state 351


State 325

   30 param_list: param_entry .

    $default  reduce using rule 30 (param_list)


State 326

  120 literal_list: literal_list COMMA literal_operand .

    $default  reduce using rule 120 (literal_list)


State 327

  259 twin_operand: IDENTIFIER PLUS . IDENTIFIER
  260             | IDENTIFIER PLUS . IDENTIFIER LO_OPTION
  261             | IDENTIFIER PLUS . IDENTIFIER HI_OPTION
  262             | IDENTIFIER PLUS . EQUALS IDENTIFIER
  263             | IDENTIFIER PLUS . EQUALS IDENTIFIER LO_OPTION
  264             | IDENTIFIER PLUS . EQUALS IDENTIFIER HI_OPTION
  265             | IDENTIFIER PLUS . EQUALS INT_OPERAND
  272 address_expression: IDENTIFIER PLUS . INT_OPERAND

    IDENTIFIER   shift, and go to state 352
    INT_OPERAND  shift, and go to state 336
    EQUALS       shift, and go to state 353


State 328

  257 memory_operand: IDENTIFIER LEFT_SQUARE_BRACKET twin_operand RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 257 (memory_operand)


State 329

  256 memory_operand: IDENTIFIER LEFT_SQUARE_BRACKET literal_operand RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 256 (memory_operand)


State 330

  255 memory_operand: IDENTIFIER LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 255 (memory_operand)


State 331

  241 operand: IDENTIFIER PIPE IDENTIFIER LO_OPTION .

    $default  reduce using rule 241 (operand)


State 332

  242 operand: IDENTIFIER PIPE IDENTIFIER HI_OPTION .

    $default  reduce using rule 242 (operand)


State 333

  244 operand: IDENTIFIER BACKSLASH IDENTIFIER LO_OPTION .

    $default  reduce using rule 244 (operand)


State 334

  245 operand: IDENTIFIER BACKSLASH IDENTIFIER HI_OPTION .

    $default  reduce using rule 245 (operand)


State 335

  246 vector_operand: . LEFT_BRACE IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  247               | . LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  248               | . LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  249               | . LEFT_BRACE IDENTIFIER RIGHT_BRACE
  251 tex_operand: LEFT_SQUARE_BRACKET IDENTIFIER COMMA $@14 . vector_operand RIGHT_SQUARE_BRACKET

    LEFT_BRACE  shift, and go to state 154

    vector_operand  go to state 354


State 336

  272 address_expression: IDENTIFIER PLUS INT_OPERAND .

    $default  reduce using rule 272 (address_expression)


State 337

  246 vector_operand: LEFT_BRACE IDENTIFIER COMMA IDENTIFIER . RIGHT_BRACE
  247               | LEFT_BRACE IDENTIFIER COMMA IDENTIFIER . COMMA IDENTIFIER RIGHT_BRACE
  248               | LEFT_BRACE IDENTIFIER COMMA IDENTIFIER . COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE

    COMMA        shift, and go to state 355
    RIGHT_BRACE  shift, and go to state 356


State 338

  125 instruction: opcode_spec LEFT_PAREN operand RIGHT_PAREN $@12 . COMMA operand COMMA LEFT_PAREN operand_list RIGHT_PAREN

    COMMA  shift, and go to state 357


State 339

  127 instruction: opcode_spec operand COMMA LEFT_PAREN RIGHT_PAREN .

    $default  reduce using rule 127 (instruction)


State 340

  126 instruction: opcode_spec operand COMMA LEFT_PAREN operand_list . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 358


State 341

  224 operand_list: . operand
  225             | . operand COMMA operand_list
  225             | operand COMMA . operand_list
  226 operand: . IDENTIFIER
  227        | . EXCLAMATION IDENTIFIER
  228        | . MINUS IDENTIFIER
  229        | . memory_operand
  230        | . literal_operand
  231        | . builtin_operand
  232        | . vector_operand
  233        | . MINUS vector_operand
  234        | . tex_operand
  235        | . IDENTIFIER PLUS INT_OPERAND
  236        | . IDENTIFIER LO_OPTION
  237        | . MINUS IDENTIFIER LO_OPTION
  238        | . IDENTIFIER HI_OPTION
  239        | . MINUS IDENTIFIER HI_OPTION
  240        | . IDENTIFIER PIPE IDENTIFIER
  241        | . IDENTIFIER PIPE IDENTIFIER LO_OPTION
  242        | . IDENTIFIER PIPE IDENTIFIER HI_OPTION
  243        | . IDENTIFIER BACKSLASH IDENTIFIER
  244        | . IDENTIFIER BACKSLASH IDENTIFIER LO_OPTION
  245        | . IDENTIFIER BACKSLASH IDENTIFIER HI_OPTION
  246 vector_operand: . LEFT_BRACE IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  247               | . LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  248               | . LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  249               | . LEFT_BRACE IDENTIFIER RIGHT_BRACE
  251 tex_operand: . LEFT_SQUARE_BRACKET IDENTIFIER COMMA $@14 vector_operand RIGHT_SQUARE_BRACKET
  252 builtin_operand: . SPECIAL_REGISTER DIMENSION_MODIFIER
  253                | . SPECIAL_REGISTER
  254 memory_operand: . LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET
  255               | . IDENTIFIER LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET
  256               | . IDENTIFIER LEFT_SQUARE_BRACKET literal_operand RIGHT_SQUARE_BRACKET
  257               | . IDENTIFIER LEFT_SQUARE_BRACKET twin_operand RIGHT_SQUARE_BRACKET
  258               | . MINUS memory_operand
  266 literal_operand: . INT_OPERAND
  267                | . FLOAT_OPERAND
  268                | . DOUBLE_OPERAND

    IDENTIFIER           shift, and go to state 149
    INT_OPERAND          shift, and go to state 132
    FLOAT_OPERAND        shift, and go to state 133
    DOUBLE_OPERAND       shift, and go to state 134
    LEFT_SQUARE_BRACKET  shift, and go to state 150
    SPECIAL_REGISTER     shift, and go to state 151
    MINUS                shift, and go to state 152
    EXCLAMATION          shift, and go to state 153
    LEFT_BRACE           shift, and go to state 154

    operand_list     go to state 317
    operand          go to state 318
    vector_operand   go to state 158
    tex_operand      go to state 159
    builtin_operand  go to state 160
    memory_operand   go to state 161
    literal_operand  go to state 162


State 342

   10 block_spec: MAXNTID_DIRECTIVE INT_OPERAND COMMA INT_OPERAND COMMA INT_OPERAND .

    $default  reduce using rule 10 (block_spec)


State 343

   43 ptr_align_spec: ALIGN_DIRECTIVE . INT_OPERAND

    INT_OPERAND  shift, and go to state 359


State 344

   40 ptr_space_spec: GLOBAL_DIRECTIVE .

    $default  reduce using rule 40 (ptr_space_spec)


State 345

   41 ptr_space_spec: LOCAL_DIRECTIVE .

    $default  reduce using rule 41 (ptr_space_spec)


State 346

   42 ptr_space_spec: SHARED_DIRECTIVE .

    $default  reduce using rule 42 (ptr_space_spec)


State 347

   38 ptr_spec: PTR_DIRECTIVE ptr_space_spec . ptr_align_spec
   43 ptr_align_spec: . ALIGN_DIRECTIVE INT_OPERAND

    ALIGN_DIRECTIVE  shift, and go to state 343

    ptr_align_spec  go to state 360


State 348

   39 ptr_spec: PTR_DIRECTIVE ptr_align_spec .

    $default  reduce using rule 39 (ptr_spec)


State 349

   34 param_entry: PARAM_DIRECTIVE $@10 variable_spec ptr_spec identifier_spec .

    $default  reduce using rule 34 (param_entry)


State 350

   31 $@9: . %empty
   32 param_list: param_list COMMA . $@9 param_entry

    $default  reduce using rule 31 ($@9)

    $@9  go to state 361


State 351

   23 function_ident_param: IDENTIFIER $@7 LEFT_PAREN $@8 param_list RIGHT_PAREN .

    $default  reduce using rule 23 (function_ident_param)


State 352

  259 twin_operand: IDENTIFIER PLUS IDENTIFIER .  [RIGHT_SQUARE_BRACKET]
  260             | IDENTIFIER PLUS IDENTIFIER . LO_OPTION
  261             | IDENTIFIER PLUS IDENTIFIER . HI_OPTION

    LO_OPTION  shift, and go to state 362
    HI_OPTION  shift, and go to state 363

    $default  reduce using rule 259 (twin_operand)


State 353

  262 twin_operand: IDENTIFIER PLUS EQUALS . IDENTIFIER
  263             | IDENTIFIER PLUS EQUALS . IDENTIFIER LO_OPTION
  264             | IDENTIFIER PLUS EQUALS . IDENTIFIER HI_OPTION
  265             | IDENTIFIER PLUS EQUALS . INT_OPERAND

    IDENTIFIER   shift, and go to state 364
    INT_OPERAND  shift, and go to state 365


State 354

  251 tex_operand: LEFT_SQUARE_BRACKET IDENTIFIER COMMA $@14 vector_operand . RIGHT_SQUARE_BRACKET

    RIGHT_SQUARE_BRACKET  shift, and go to state 366


State 355

  247 vector_operand: LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA . IDENTIFIER RIGHT_BRACE
  248               | LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA . IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE

    IDENTIFIER  shift, and go to state 367


State 356

  246 vector_operand: LEFT_BRACE IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE .

    $default  reduce using rule 246 (vector_operand)


State 357

  125 instruction: opcode_spec LEFT_PAREN operand RIGHT_PAREN $@12 COMMA . operand COMMA LEFT_PAREN operand_list RIGHT_PAREN
  226 operand: . IDENTIFIER
  227        | . EXCLAMATION IDENTIFIER
  228        | . MINUS IDENTIFIER
  229        | . memory_operand
  230        | . literal_operand
  231        | . builtin_operand
  232        | . vector_operand
  233        | . MINUS vector_operand
  234        | . tex_operand
  235        | . IDENTIFIER PLUS INT_OPERAND
  236        | . IDENTIFIER LO_OPTION
  237        | . MINUS IDENTIFIER LO_OPTION
  238        | . IDENTIFIER HI_OPTION
  239        | . MINUS IDENTIFIER HI_OPTION
  240        | . IDENTIFIER PIPE IDENTIFIER
  241        | . IDENTIFIER PIPE IDENTIFIER LO_OPTION
  242        | . IDENTIFIER PIPE IDENTIFIER HI_OPTION
  243        | . IDENTIFIER BACKSLASH IDENTIFIER
  244        | . IDENTIFIER BACKSLASH IDENTIFIER LO_OPTION
  245        | . IDENTIFIER BACKSLASH IDENTIFIER HI_OPTION
  246 vector_operand: . LEFT_BRACE IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  247               | . LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  248               | . LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  249               | . LEFT_BRACE IDENTIFIER RIGHT_BRACE
  251 tex_operand: . LEFT_SQUARE_BRACKET IDENTIFIER COMMA $@14 vector_operand RIGHT_SQUARE_BRACKET
  252 builtin_operand: . SPECIAL_REGISTER DIMENSION_MODIFIER
  253                | . SPECIAL_REGISTER
  254 memory_operand: . LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET
  255               | . IDENTIFIER LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET
  256               | . IDENTIFIER LEFT_SQUARE_BRACKET literal_operand RIGHT_SQUARE_BRACKET
  257               | . IDENTIFIER LEFT_SQUARE_BRACKET twin_operand RIGHT_SQUARE_BRACKET
  258               | . MINUS memory_operand
  266 literal_operand: . INT_OPERAND
  267                | . FLOAT_OPERAND
  268                | . DOUBLE_OPERAND

    IDENTIFIER           shift, and go to state 149
    INT_OPERAND          shift, and go to state 132
    FLOAT_OPERAND        shift, and go to state 133
    DOUBLE_OPERAND       shift, and go to state 134
    LEFT_SQUARE_BRACKET  shift, and go to state 150
    SPECIAL_REGISTER     shift, and go to state 151
    MINUS                shift, and go to state 152
    EXCLAMATION          shift, and go to state 153
    LEFT_BRACE           shift, and go to state 154

    operand          go to state 368
    vector_operand   go to state 158
    tex_operand      go to state 159
    builtin_operand  go to state 160
    memory_operand   go to state 161
    literal_operand  go to state 162


State 358

  126 instruction: opcode_spec operand COMMA LEFT_PAREN operand_list RIGHT_PAREN .

    $default  reduce using rule 126 (instruction)


State 359

   43 ptr_align_spec: ALIGN_DIRECTIVE INT_OPERAND .

    $default  reduce using rule 43 (ptr_align_spec)


State 360

   38 ptr_spec: PTR_DIRECTIVE ptr_space_spec ptr_align_spec .

    $default  reduce using rule 38 (ptr_spec)


State 361

   32 param_list: param_list COMMA $@9 . param_entry
   34 param_entry: . PARAM_DIRECTIVE $@10 variable_spec ptr_spec identifier_spec
   36            | . REG_DIRECTIVE $@11 variable_spec identifier_spec

    PARAM_DIRECTIVE  shift, and go to state 124
    REG_DIRECTIVE    shift, and go to state 125

    param_entry  go to state 369


State 362

  260 twin_operand: IDENTIFIER PLUS IDENTIFIER LO_OPTION .

    $default  reduce using rule 260 (twin_operand)


State 363

  261 twin_operand: IDENTIFIER PLUS IDENTIFIER HI_OPTION .

    $default  reduce using rule 261 (twin_operand)


State 364

  262 twin_operand: IDENTIFIER PLUS EQUALS IDENTIFIER .  [RIGHT_SQUARE_BRACKET]
  263             | IDENTIFIER PLUS EQUALS IDENTIFIER . LO_OPTION
  264             | IDENTIFIER PLUS EQUALS IDENTIFIER . HI_OPTION

    LO_OPTION  shift, and go to state 370
    HI_OPTION  shift, and go to state 371

    $default  reduce using rule 262 (twin_operand)


State 365

  265 twin_operand: IDENTIFIER PLUS EQUALS INT_OPERAND .

    $default  reduce using rule 265 (twin_operand)


State 366

  251 tex_operand: LEFT_SQUARE_BRACKET IDENTIFIER COMMA $@14 vector_operand RIGHT_SQUARE_BRACKET .

    $default  reduce using rule 251 (tex_operand)


State 367

  247 vector_operand: LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER . RIGHT_BRACE
  248               | LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER . COMMA IDENTIFIER RIGHT_BRACE

    COMMA        shift, and go to state 372
    RIGHT_BRACE  shift, and go to state 373


State 368

  125 instruction: opcode_spec LEFT_PAREN operand RIGHT_PAREN $@12 COMMA operand . COMMA LEFT_PAREN operand_list RIGHT_PAREN

    COMMA  shift, and go to state 374


State 369

   32 param_list: param_list COMMA $@9 param_entry .

    $default  reduce using rule 32 (param_list)


State 370

  263 twin_operand: IDENTIFIER PLUS EQUALS IDENTIFIER LO_OPTION .

    $default  reduce using rule 263 (twin_operand)


State 371

  264 twin_operand: IDENTIFIER PLUS EQUALS IDENTIFIER HI_OPTION .

    $default  reduce using rule 264 (twin_operand)


State 372

  248 vector_operand: LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA . IDENTIFIER RIGHT_BRACE

    IDENTIFIER  shift, and go to state 375


State 373

  247 vector_operand: LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE .

    $default  reduce using rule 247 (vector_operand)


State 374

  125 instruction: opcode_spec LEFT_PAREN operand RIGHT_PAREN $@12 COMMA operand COMMA . LEFT_PAREN operand_list RIGHT_PAREN

    LEFT_PAREN  shift, and go to state 376


State 375

  248 vector_operand: LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER . RIGHT_BRACE

    RIGHT_BRACE  shift, and go to state 377


State 376

  125 instruction: opcode_spec LEFT_PAREN operand RIGHT_PAREN $@12 COMMA operand COMMA LEFT_PAREN . operand_list RIGHT_PAREN
  224 operand_list: . operand
  225             | . operand COMMA operand_list
  226 operand: . IDENTIFIER
  227        | . EXCLAMATION IDENTIFIER
  228        | . MINUS IDENTIFIER
  229        | . memory_operand
  230        | . literal_operand
  231        | . builtin_operand
  232        | . vector_operand
  233        | . MINUS vector_operand
  234        | . tex_operand
  235        | . IDENTIFIER PLUS INT_OPERAND
  236        | . IDENTIFIER LO_OPTION
  237        | . MINUS IDENTIFIER LO_OPTION
  238        | . IDENTIFIER HI_OPTION
  239        | . MINUS IDENTIFIER HI_OPTION
  240        | . IDENTIFIER PIPE IDENTIFIER
  241        | . IDENTIFIER PIPE IDENTIFIER LO_OPTION
  242        | . IDENTIFIER PIPE IDENTIFIER HI_OPTION
  243        | . IDENTIFIER BACKSLASH IDENTIFIER
  244        | . IDENTIFIER BACKSLASH IDENTIFIER LO_OPTION
  245        | . IDENTIFIER BACKSLASH IDENTIFIER HI_OPTION
  246 vector_operand: . LEFT_BRACE IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  247               | . LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  248               | . LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE
  249               | . LEFT_BRACE IDENTIFIER RIGHT_BRACE
  251 tex_operand: . LEFT_SQUARE_BRACKET IDENTIFIER COMMA $@14 vector_operand RIGHT_SQUARE_BRACKET
  252 builtin_operand: . SPECIAL_REGISTER DIMENSION_MODIFIER
  253                | . SPECIAL_REGISTER
  254 memory_operand: . LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET
  255               | . IDENTIFIER LEFT_SQUARE_BRACKET address_expression RIGHT_SQUARE_BRACKET
  256               | . IDENTIFIER LEFT_SQUARE_BRACKET literal_operand RIGHT_SQUARE_BRACKET
  257               | . IDENTIFIER LEFT_SQUARE_BRACKET twin_operand RIGHT_SQUARE_BRACKET
  258               | . MINUS memory_operand
  266 literal_operand: . INT_OPERAND
  267                | . FLOAT_OPERAND
  268                | . DOUBLE_OPERAND

    IDENTIFIER           shift, and go to state 149
    INT_OPERAND          shift, and go to state 132
    FLOAT_OPERAND        shift, and go to state 133
    DOUBLE_OPERAND       shift, and go to state 134
    LEFT_SQUARE_BRACKET  shift, and go to state 150
    SPECIAL_REGISTER     shift, and go to state 151
    MINUS                shift, and go to state 152
    EXCLAMATION          shift, and go to state 153
    LEFT_BRACE           shift, and go to state 154

    operand_list     go to state 378
    operand          go to state 318
    vector_operand   go to state 158
    tex_operand      go to state 159
    builtin_operand  go to state 160
    memory_operand   go to state 161
    literal_operand  go to state 162


State 377

  248 vector_operand: LEFT_BRACE IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER COMMA IDENTIFIER RIGHT_BRACE .

    $default  reduce using rule 248 (vector_operand)


State 378

  125 instruction: opcode_spec LEFT_PAREN operand RIGHT_PAREN $@12 COMMA operand COMMA LEFT_PAREN operand_list . RIGHT_PAREN

    RIGHT_PAREN  shift, and go to state 379


State 379

  125 instruction: opcode_spec LEFT_PAREN operand RIGHT_PAREN $@12 COMMA operand COMMA LEFT_PAREN operand_list RIGHT_PAREN .

    $default  reduce using rule 125 (instruction)
