//
// Generated by LLVM NVPTX Back-End
//

.version 3.0
.target sm_20
.address_size 64

	// .globl	_Z14interac_atomicP7accountP11transactioni
                                        // @_Z14interac_atomicP7accountP11transactioni
.visible .entry _Z14interac_atomicP7accountP11transactioni(
	.param .u64 _Z14interac_atomicP7accountP11transactioni_param_0,
	.param .u64 _Z14interac_atomicP7accountP11transactioni_param_1,
	.param .u32 _Z14interac_atomicP7accountP11transactioni_param_2
)
{
	.reg .pred 	%p<7>;
	.reg .s32 	%r<29>;
	.reg .s64 	%rd<31>;

// BB#0:
	ld.param.u32 	%r6, [_Z14interac_atomicP7accountP11transactioni_param_2];
	ld.param.u64 	%rd12, [_Z14interac_atomicP7accountP11transactioni_param_1];
	ld.param.u64 	%rd11, [_Z14interac_atomicP7accountP11transactioni_param_0];
	cvta.to.global.u64 	%rd13, %rd12;
	cvta.global.u64 	%rd14, %rd13;
	cvta.to.global.u64 	%rd15, %rd11;
	cvta.global.u64 	%rd16, %rd15;
	cvta.to.global.u64 	%rd17, %rd14;
	cvta.global.u64 	%rd18, %rd17;
	cvta.to.global.u64 	%rd19, %rd16;
	cvta.global.u64 	%rd20, %rd19;
	cvta.to.global.u64 	%rd1, %rd20;
	cvta.to.global.u64 	%rd2, %rd18;
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r8, %ctaid.y;
	mov.u32 	%r9, %ctaid.z;
	add.s32 	%r10, %r9, %r8;
	mul.lo.s32 	%r11, %r10, 120;
	mov.u32 	%r12, %tid.x;
	mov.u32 	%r13, %tid.y;
	mov.u32 	%r14, %tid.z;
	add.s32 	%r15, %r13, %r7;
	add.s32 	%r16, %r15, %r11;
	add.s32 	%r17, %r16, %r14;
	mul.lo.s32 	%r18, %r17, 192;
	add.s32 	%r1, %r18, %r12;
	setp.ge.s32	%p1, %r1, %r6;
	@%p1 bra 	LBB0_11;
	bra.uni 	LBB0_1;
LBB0_1:                                 // %.lr.ph.preheader
	mov.u32 	%r28, %r1;
	bra.uni 	LBB0_2;
LBB0_2:                                 // %.lr.ph
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_4 Depth 2
	mov.u32 	%r2, %r28;
	cvt.s64.s32	%rd3, %r2;
	mul.lo.s64 	%rd21, %rd3, 12;
	add.s64 	%rd22, %rd2, %rd21;
	ld.global.u32 	%r3, [%rd22+4];
	cvt.s64.s32	%rd4, %r3;
	shl.b64 	%rd23, %rd4, 3;
	add.s64 	%rd5, %rd1, %rd23;
	ld.global.u32 	%r4, [%rd22+8];
	cvt.s64.s32	%rd6, %r4;
	shl.b64 	%rd24, %rd6, 3;
	add.s64 	%rd7, %rd1, %rd24;
	setp.eq.s32	%p2, %r3, %r4;
	@%p2 bra 	LBB0_9;
	bra.uni 	LBB0_3;
LBB0_3:                                 //   in Loop: Header=BB0_2 Depth=1
	setp.gt.s32	%p3, %r3, %r4;
	selp.b64	%rd8, %rd5, %rd7, %p3;
	selp.b64	%rd9, %rd7, %rd5, %p3;
	shl.b64 	%rd25, %rd4, 3;
	add.s64 	%rd26, %rd1, %rd25;
	add.s64 	%rd10, %rd26, 4;
	bra.uni 	LBB0_4;
LBB0_4:                                 // %.preheader
                                        //   Parent Loop BB0_2 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	atom.global.cas.b32 	%r19, [%rd8], 0, 1;
	setp.eq.s32	%p4, %r19, 0;
	@%p4 bra 	LBB0_6;
	bra.uni 	LBB0_5;
LBB0_5:                                 // %.preheader.backedge
                                        //   in Loop: Header=BB0_4 Depth=2
	bra.uni 	LBB0_4;
LBB0_6:                                 //   in Loop: Header=BB0_4 Depth=2
	atom.global.cas.b32 	%r20, [%rd9], 0, 1;
	setp.ne.s32	%p5, %r20, 0;
	@%p5 bra 	LBB0_8;
	bra.uni 	LBB0_7;
LBB0_7:                                 // %.backedge.thread
                                        //   in Loop: Header=BB0_2 Depth=1
	mul.lo.s64 	%rd27, %rd3, 12;
	add.s64 	%rd28, %rd2, %rd27;
	shl.b64 	%rd29, %rd6, 3;
	add.s64 	%rd30, %rd1, %rd29;
	ld.global.u32 	%r22, [%rd28];
	ld.global.u32 	%r23, [%rd10];
	sub.s32 	%r24, %r23, %r22;
	st.global.u32 	[%rd10], %r24;
	ld.global.u32 	%r25, [%rd30+4];
	add.s32 	%r26, %r25, %r22;
	st.global.u32 	[%rd30+4], %r26;
	mov.u32 	%r27, 0;
	st.global.u32 	[%rd9], %r27;
	st.global.u32 	[%rd8], %r27;
	bra.uni 	LBB0_9;
LBB0_8:                                 // %.backedge
                                        //   in Loop: Header=BB0_4 Depth=2
	mov.u32 	%r21, 0;
	st.global.u32 	[%rd8], %r21;
	bra.uni 	LBB0_5;
LBB0_9:                                 // %.loopexit
                                        //   in Loop: Header=BB0_2 Depth=1
	add.s32 	%r5, %r2, 23040;
	setp.lt.s32	%p6, %r5, %r6;
	mov.u32 	%r28, %r5;
	@%p6 bra 	LBB0_2;
	bra.uni 	LBB0_10;
LBB0_10:                                // %._crit_edge.loopexit
	bra.uni 	LBB0_11;
LBB0_11:                                // %._crit_edge
	ret;
}


